using System;

namespace IFM.DataServicesCore.CommonObjects.Payments
{
    [System.Serializable]
    public class RecurringCreditCardInformation
    {
        public string CardNumber { get; set; }
        public Int32 CardExpireMonth { get; set; }
        public Int32 CardExpireYear { get; set; }
        public Int32 DeductionDay { get; set; }
        public string EmailAddress { get; set; }
        public string ZipCode { get; set; } //added 7/19/2020; required by Fiserv when not using their iframe
        public string SecurityCode { get; set; } //added 7/19/2020; required by Fiserv when not using their iframe

        //added 7/19/2020 for Fiserv
        public string Fiserv_AuthToken { get; set; } //obtained for use w/ iframe; not required if not using iframe
        public string Fiserv_SessionToken { get; set; } //obtained for use w/ iframe; not required if not using iframe
        public int Fiserv_SessionId { get; set; } //obtained while getting tokens used w/ iframe; not required if not using iframe
        public string Fiserv_FundingAccountToken { get; set; } //obtained from iframe; not required if not using iframe
        public string Fiserv_IframeResponse { get; set; } //obtained in response back from iframe (includes fundingMethod, which we will use); not required if not using iframe        
        public int Fiserv_WalletItemId { get; set; } //added 7/27/2020; generated by IFM; corresponds to FundingAccountToken; will need to set when switching to a different wallet item
        //private string _CardTypeText = "";
        //public string CardTypeText { get { return _CardTypeText; } } 
        //added 7/28/2020
        //public string CardTypeText { get; private set; }
        //added 7/29/2020
        //public string FundingAccountLastFourDigits { get; private set; }
        //public string FundingMethod { get; private set; }
        //public string CardTypeAbbreviation { get; private set; }
        //public IFM_CreditCardProcessing.Enums.CreditCardType IFM_CC_Type { get; private set; }
        //updated 7/30/2020
        protected internal string CardTypeText { get; set; }
        protected internal string FundingAccountLastFourDigits { get; set; }
        protected internal string FundingMethod { get; set; }
        protected internal string CardTypeAbbreviation { get; set; }
        protected internal IFM_CreditCardProcessing.Enums.CreditCardType IFM_CC_Type { get; set; }
        protected internal IFM_FiservDatabaseObjects.FiservWalletItem FiservWalletItem { get; set; } //added 7/30/2020
        protected internal bool AlreadyProcessedFiservIframeResponse { get; set; } //added 7/30/2020
        protected internal string fiservIframeResponseThatWasProcessed { get; set; } //added 7/30/2020

        public RecurringCreditCardInformation()
        {
        }

        public RecurringCreditCardInformation(CreditCardPaymentInformation creditCardPaymentInfo)
        {
            this.CardExpireMonth = creditCardPaymentInfo.CardExpireMonth;
            this.CardExpireYear = creditCardPaymentInfo.CardExpireYear;
            this.CardNumber = creditCardPaymentInfo.CardNumber;
        }

        public bool PassesBasicValidation()
        {
            DateTime.TryParse($"{CardExpireMonth}/1/{CardExpireYear}", out DateTime expireDate);
            if (expireDate != DateTime.MinValue)
            {
                expireDate = expireDate.AddMonths(1);
            }
            else
            {
                return false;
            }

            return DateTime.Now < expireDate && DeductionDay > 0 && DeductionDay < 32;
        }

        //added 7/28/2020; removed 7/30/2020
        //protected internal void Set_CardTypeText(string txt)
        //{
        //    //_CardTypeText = txt;
        //    this.CardTypeText = txt;
        //}
        //added 7/29/2020; removed 7/30/2020
        //protected internal void Set_FundingAccountLastFourDigits(string txt)
        //{
        //    this.FundingAccountLastFourDigits = txt;
        //}
        //protected internal void Set_FundingMethod(string txt)
        //{
        //    this.FundingMethod = txt;
        //}
        //protected internal void Set_IFM_CC_Type(IFM_CreditCardProcessing.Enums.CreditCardType ccType)
        //{
        //    this.IFM_CC_Type = ccType;
        //}
        //protected internal void Set_CardTypeAbbreviation(string txt)
        //{
        //    this.CardTypeAbbreviation = txt;
        //}

        //added 7/29/2020
        //protected internal void Process_Fiserv_IframeResponse()
        //{
        //    string fiservFundingAccountLastFourDigit = "";
        //    IFM_CreditCardProcessing.Enums.CreditCardType ifmCCType = IFM_CreditCardProcessing.Enums.CreditCardType.None;
        //    string ccTypeAbbreviation = "";
        //    string fiservFundingMethod = "";
        //    string maskedCardNum = "";
        //    string cardTypeTxt = "";

        //    BusinessLogic.Payments.PayPlanHelper.SetCardFieldsForFiservIframeResponse(this.Fiserv_IframeResponse, ref fiservFundingAccountLastFourDigit, ref ifmCCType, ref ccTypeAbbreviation, ref fiservFundingMethod, ref maskedCardNum, ref cardTypeTxt);

        //    if (string.IsNullOrWhiteSpace(this.FundingAccountLastFourDigits) == true || string.IsNullOrWhiteSpace(fiservFundingAccountLastFourDigit) == false)
        //    {
        //        this.FundingAccountLastFourDigits = fiservFundingAccountLastFourDigit;
        //    }
        //    if (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), this.IFM_CC_Type) == false || this.IFM_CC_Type == IFM_CreditCardProcessing.Enums.CreditCardType.None || (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), ifmCCType) == true && ifmCCType != IFM_CreditCardProcessing.Enums.CreditCardType.None))
        //    {
        //        this.IFM_CC_Type = ifmCCType;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.CardTypeAbbreviation) == true || string.IsNullOrWhiteSpace(ccTypeAbbreviation) == false)
        //    {
        //        this.CardTypeAbbreviation = ccTypeAbbreviation;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.FundingMethod) == true || string.IsNullOrWhiteSpace(fiservFundingMethod) == false)
        //    {
        //        this.FundingMethod = fiservFundingMethod;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.CardNumber) == true || string.IsNullOrWhiteSpace(maskedCardNum) == false)
        //    {
        //        this.CardNumber = maskedCardNum;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.CardTypeText) == true || string.IsNullOrWhiteSpace(cardTypeTxt) == false)
        //    {
        //        this.CardTypeText = cardTypeTxt;
        //    }
        //}
        //updated 7/30/2020
        protected internal void Process_Fiserv_IframeResponse()
        {
            string fiservFundingAccountLastFourDigit = "";
            IFM_CreditCardProcessing.Enums.CreditCardType ifmCCType = IFM_CreditCardProcessing.Enums.CreditCardType.None;
            string ccTypeAbbreviation = "";
            string fiservFundingMethod = "";
            string maskedCardNum = "";
            string cardTypeTxt = "";

            if (string.IsNullOrWhiteSpace(this.Fiserv_IframeResponse) == false)
            {
                bool iframeResponseChanged = false;
                if (this.AlreadyProcessedFiservIframeResponse == true && string.IsNullOrWhiteSpace(this.fiservIframeResponseThatWasProcessed) == false)
                {
                    if (this.fiservIframeResponseThatWasProcessed != this.Fiserv_IframeResponse)
                    {
                        iframeResponseChanged = true;
                    }
                }
                if (this.AlreadyProcessedFiservIframeResponse == false || iframeResponseChanged == true)
                {
                    BusinessLogic.Payments.PayPlanHelper.SetCardFieldsForFiservIframeResponse(this.Fiserv_IframeResponse, ref fiservFundingAccountLastFourDigit, ref ifmCCType, ref ccTypeAbbreviation, ref fiservFundingMethod, ref maskedCardNum, ref cardTypeTxt);

                    if (string.IsNullOrWhiteSpace(this.FundingAccountLastFourDigits) == true || string.IsNullOrWhiteSpace(fiservFundingAccountLastFourDigit) == false)
                    {
                        this.FundingAccountLastFourDigits = fiservFundingAccountLastFourDigit;
                    }
                    if (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), this.IFM_CC_Type) == false || this.IFM_CC_Type == IFM_CreditCardProcessing.Enums.CreditCardType.None || (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), ifmCCType) == true && ifmCCType != IFM_CreditCardProcessing.Enums.CreditCardType.None))
                    {
                        this.IFM_CC_Type = ifmCCType;
                    }
                    if (string.IsNullOrWhiteSpace(this.CardTypeAbbreviation) == true || string.IsNullOrWhiteSpace(ccTypeAbbreviation) == false)
                    {
                        this.CardTypeAbbreviation = ccTypeAbbreviation;
                    }
                    if (string.IsNullOrWhiteSpace(this.FundingMethod) == true || string.IsNullOrWhiteSpace(fiservFundingMethod) == false)
                    {
                        this.FundingMethod = fiservFundingMethod;
                    }
                    if (string.IsNullOrWhiteSpace(this.CardNumber) == true || string.IsNullOrWhiteSpace(maskedCardNum) == false)
                    {
                        this.CardNumber = maskedCardNum;
                    }
                    if (string.IsNullOrWhiteSpace(this.CardTypeText) == true || string.IsNullOrWhiteSpace(cardTypeTxt) == false)
                    {
                        this.CardTypeText = cardTypeTxt;
                    }

                    this.AlreadyProcessedFiservIframeResponse = true;
                    this.fiservIframeResponseThatWasProcessed = this.Fiserv_IframeResponse;
                }
            }            
        }

        protected internal void Process_CardNumber()
        {
            string fundingAccountLastFourDigit = "";
            IFM_CreditCardProcessing.Enums.CreditCardType ifmCCType = IFM_CreditCardProcessing.Enums.CreditCardType.None;
            string ccTypeAbbreviation = "";
            string cardTypeTxt = "";

            BusinessLogic.Payments.PayPlanHelper.SetCardFieldsForCardNumber(this.CardNumber, this.CardTypeAbbreviation, ref fundingAccountLastFourDigit, ref ifmCCType, ref ccTypeAbbreviation, ref cardTypeTxt);

            if (string.IsNullOrWhiteSpace(this.FundingAccountLastFourDigits) == true || string.IsNullOrWhiteSpace(fundingAccountLastFourDigit) == false)
            {
                this.FundingAccountLastFourDigits = fundingAccountLastFourDigit;
            }
            if (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), this.IFM_CC_Type) == false || this.IFM_CC_Type == IFM_CreditCardProcessing.Enums.CreditCardType.None || (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), ifmCCType) == true && ifmCCType != IFM_CreditCardProcessing.Enums.CreditCardType.None))
            {
                this.IFM_CC_Type = ifmCCType;
            }
            if (string.IsNullOrWhiteSpace(this.CardTypeAbbreviation) == true || string.IsNullOrWhiteSpace(ccTypeAbbreviation) == false)
            {
                this.CardTypeAbbreviation = ccTypeAbbreviation;
            }
            if (string.IsNullOrWhiteSpace(this.CardTypeText) == true || string.IsNullOrWhiteSpace(cardTypeTxt) == false)
            {
                this.CardTypeText = cardTypeTxt;
            }
        }

        //protected internal void Process_WalletItemId()
        //{
        //    string fundingAccountToken = "";
        //    string fiservFundingAccountLastFourDigit = "";
        //    IFM_CreditCardProcessing.Enums.CreditCardType ifmCCType = IFM_CreditCardProcessing.Enums.CreditCardType.None;
        //    string ccTypeAbbreviation = "";
        //    string fiservFundingMethod = "";
        //    string maskedCardNum = "";
        //    string cardTypeTxt = "";

        //    BusinessLogic.Payments.PayPlanHelper.SetCardFieldForWalletItemId(this.Fiserv_WalletItemId, ref fundingAccountToken, ref fiservFundingAccountLastFourDigit, ref ifmCCType, ref ccTypeAbbreviation, ref fiservFundingMethod, ref maskedCardNum, ref cardTypeTxt);

        //    if (string.IsNullOrWhiteSpace(this.Fiserv_FundingAccountToken) == true || string.IsNullOrWhiteSpace(fundingAccountToken) == false)
        //    {
        //        this.Fiserv_FundingAccountToken = fundingAccountToken;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.FundingAccountLastFourDigits) == true || string.IsNullOrWhiteSpace(fiservFundingAccountLastFourDigit) == false)
        //    {
        //        this.FundingAccountLastFourDigits = fiservFundingAccountLastFourDigit;
        //    }
        //    if (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), this.IFM_CC_Type) == false || this.IFM_CC_Type == IFM_CreditCardProcessing.Enums.CreditCardType.None || (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), ifmCCType) == true && ifmCCType != IFM_CreditCardProcessing.Enums.CreditCardType.None))
        //    {
        //        this.IFM_CC_Type = ifmCCType;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.CardTypeAbbreviation) == true || string.IsNullOrWhiteSpace(ccTypeAbbreviation) == false)
        //    {
        //        this.CardTypeAbbreviation = ccTypeAbbreviation;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.FundingMethod) == true || string.IsNullOrWhiteSpace(fiservFundingMethod) == false)
        //    {
        //        this.FundingMethod = fiservFundingMethod;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.CardNumber) == true || string.IsNullOrWhiteSpace(maskedCardNum) == false)
        //    {
        //        this.CardNumber = maskedCardNum;
        //    }
        //    if (string.IsNullOrWhiteSpace(this.CardTypeText) == true || string.IsNullOrWhiteSpace(cardTypeTxt) == false)
        //    {
        //        this.CardTypeText = cardTypeTxt;
        //    }
        //}
        //updated 7/30/2020
        protected internal void Process_WalletItemId()
        {
            IFM_FiservDatabaseObjects.FiservWalletItem wi = null;
            string fundingAccountToken = "";
            string fiservFundingAccountLastFourDigit = "";
            IFM_CreditCardProcessing.Enums.CreditCardType ifmCCType = IFM_CreditCardProcessing.Enums.CreditCardType.None;
            string ccTypeAbbreviation = "";
            string fiservFundingMethod = "";
            string maskedCardNum = "";
            string cardTypeTxt = "";

            BusinessLogic.Payments.PayPlanHelper.SetCardFieldForWalletItemId(this.Fiserv_WalletItemId, ref wi, ref fundingAccountToken, ref fiservFundingAccountLastFourDigit, ref ifmCCType, ref ccTypeAbbreviation, ref fiservFundingMethod, ref maskedCardNum, ref cardTypeTxt);

            if (this.FiservWalletItem == null || wi != null)
            {
                this.FiservWalletItem = wi;
            }
            if (string.IsNullOrWhiteSpace(this.Fiserv_FundingAccountToken) == true || string.IsNullOrWhiteSpace(fundingAccountToken) == false)
            {
                this.Fiserv_FundingAccountToken = fundingAccountToken;
            }
            if (string.IsNullOrWhiteSpace(this.FundingAccountLastFourDigits) == true || string.IsNullOrWhiteSpace(fiservFundingAccountLastFourDigit) == false)
            {
                this.FundingAccountLastFourDigits = fiservFundingAccountLastFourDigit;
            }
            if (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), this.IFM_CC_Type) == false || this.IFM_CC_Type == IFM_CreditCardProcessing.Enums.CreditCardType.None || (System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), ifmCCType) == true && ifmCCType != IFM_CreditCardProcessing.Enums.CreditCardType.None))
            {
                this.IFM_CC_Type = ifmCCType;
            }
            if (string.IsNullOrWhiteSpace(this.CardTypeAbbreviation) == true || string.IsNullOrWhiteSpace(ccTypeAbbreviation) == false)
            {
                this.CardTypeAbbreviation = ccTypeAbbreviation;
            }
            if (string.IsNullOrWhiteSpace(this.FundingMethod) == true || string.IsNullOrWhiteSpace(fiservFundingMethod) == false)
            {
                this.FundingMethod = fiservFundingMethod;
            }
            if (string.IsNullOrWhiteSpace(this.CardNumber) == true || string.IsNullOrWhiteSpace(maskedCardNum) == false)
            {
                this.CardNumber = maskedCardNum;
            }
            if (string.IsNullOrWhiteSpace(this.CardTypeText) == true || string.IsNullOrWhiteSpace(cardTypeTxt) == false)
            {
                this.CardTypeText = cardTypeTxt;
            }
        }

        //added 7/30/2020
        protected internal void Process_CardRelatedFields()
        {
            Process_CardNumber();

            Process_Fiserv_IframeResponse(); //always do this just in case original cardNumber is still being set even though a change was made

            if (HasCardNumberAndTypeInfo() == false)
            {
                Process_WalletItemId();
            }
        }
        protected internal bool HasCardNumberAndTypeInfo()
        {
            bool hasIt = false;

            if (string.IsNullOrWhiteSpace(this.FundingAccountLastFourDigits) == false && System.Enum.IsDefined(typeof(IFM_CreditCardProcessing.Enums.CreditCardType), this.IFM_CC_Type) == true && this.IFM_CC_Type != IFM_CreditCardProcessing.Enums.CreditCardType.None && string.IsNullOrWhiteSpace(this.CardTypeText) == false)
            {
                hasIt = true;
            }

            return hasIt;
        }

    }
}