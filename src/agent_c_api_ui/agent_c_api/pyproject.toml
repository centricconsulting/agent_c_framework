[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "agent_c-api"
version = "0.2.0"
description = "FastAPI API Wrapper for Agent_C"
dependencies = [
    "agent_c-core>=0.1.3",
    "agent_c-tools>=0.1.3",
    "fastapi>=0.115.12",
    "fastapi-pagination>=0.13.1",
    "fastapi-versioning>=0.10.0",
    "fastapi-jwt-auth>=0.5.0",
    "structlog>=25.4.0",
    "pyhumps>=3.8.0",
    "spectree>=1.4.7",
    "fastapi-utils>=0.8.0",
    "uvicorn==0.34.3",
    "pydantic==2.11.7",
    "pydantic-settings==2.9.1",
    "python-multipart==0.0.20",
    "markitdown==0.1.2",
    "aiofiles==24.1.0",
    "fastapi-cache2>=0.2.2",
    "redis>=6.2.0",
    "spacy>=3.8.7"
]

requires-python = ">=3.12"
authors = [
    { name = "Joe Ours", email = "joesph.ours@centricconsulting.com" },
]
maintainers = [
    { name = "Donavan Stanley", email = "donavan.stanley@centricconsulting.com" },
    { name = "Joe Ours", email = "joesph.ours@centricconsulting.com" },
]

readme = "README.MD"
license = { text = "Business Source License 1.1" }
keywords = ["gpt", "claude", "agents", "ai", "centric"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python"
]


[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio",
    "respx",
    "asynctest",
    "pytest-mock",        # More powerful mocking for pytest
    "pytest-xdist",      # Parallel test execution
    "pytest-timeout",    # Test timeout enforcement
    "faker",             # Test data generation
    "black",
    "isort",
    "mypy",
    "httpx",             # For async HTTP client testing
]

[project.urls]
Homepage = "https://github.com/centricconsulting/agent_c_framework"


[project.scripts]
agent_c-api = "agent_c_api.main:run"