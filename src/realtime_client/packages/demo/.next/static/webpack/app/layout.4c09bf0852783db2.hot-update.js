"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/../../node_modules/.pnpm/katex@0.16.22/node_modules/katex/dist/katex.min.css":
/*!************************************************************************************!*\
  !*** ../../node_modules/.pnpm/katex@0.16.22/node_modules/katex/dist/katex.min.css ***!
  \************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"a1116f2637bb\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0va2F0ZXhAMC4xNi4yMi9ub2RlX21vZHVsZXMva2F0ZXgvZGlzdC9rYXRleC5taW4uY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksSUFBVSxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsiL1VzZXJzL0Vib290aC9hZ2VudF9jX2ZyYW1ld29yay9zcmMvcmVhbHRpbWVfY2xpZW50L25vZGVfbW9kdWxlcy8ucG5wbS9rYXRleEAwLjE2LjIyL25vZGVfbW9kdWxlcy9rYXRleC9kaXN0L2thdGV4Lm1pbi5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJhMTExNmYyNjM3YmJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/.pnpm/katex@0.16.22/node_modules/katex/dist/katex.min.css\n"));

/***/ }),

/***/ "(app-pages-browser)/../core/dist/client/RealtimeClient.js":
/*!*********************************************!*\
  !*** ../core/dist/client/RealtimeClient.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealtimeClient: () => (/* binding */ RealtimeClient)\n/* harmony export */ });\n/* harmony import */ var _events_EventEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventEmitter */ \"(app-pages-browser)/../core/dist/events/EventEmitter.js\");\n/* harmony import */ var _events_EventStreamProcessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/EventStreamProcessor */ \"(app-pages-browser)/../core/dist/events/EventStreamProcessor.js\");\n/* harmony import */ var _ClientConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ClientConfig */ \"(app-pages-browser)/../core/dist/client/ClientConfig.js\");\n/* harmony import */ var _WebSocketManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebSocketManager */ \"(app-pages-browser)/../core/dist/client/WebSocketManager.js\");\n/* harmony import */ var _ReconnectionManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ReconnectionManager */ \"(app-pages-browser)/../core/dist/client/ReconnectionManager.js\");\n/* harmony import */ var _FileUploadManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FileUploadManager */ \"(app-pages-browser)/../core/dist/client/FileUploadManager.js\");\n/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../session */ \"(app-pages-browser)/../core/dist/session/index.js\");\n/* harmony import */ var _audio__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../audio */ \"(app-pages-browser)/../core/dist/audio/index.js\");\n/* harmony import */ var _voice__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../voice */ \"(app-pages-browser)/../core/dist/voice/index.js\");\n/* harmony import */ var _avatar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../avatar */ \"(app-pages-browser)/../core/dist/avatar/index.js\");\n/**\n * Realtime Client - Main client class for Agent C Realtime API\n */ \n\n\n\n\n\n\n\n\n\n/**\n * Main client class for connecting to Agent C Realtime API\n */ class RealtimeClient extends _events_EventEmitter__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    /**\n     * Setup session fetching handlers\n     */ setupSessionFetchingHandlers() {\n        if (!this.sessionManager) return;\n        // Listen for session fetch requests from ChatSessionManager\n        this.sessionManager.on('request-user-sessions', (param)=>{\n            let { offset, limit } = param;\n            this.fetchUserSessions(offset, limit);\n        });\n        // Handle the response from server\n        this.on('get_user_sessions_response', (event)=>{\n            if (this.sessionManager && event.sessions) {\n                // Append new sessions to the index\n                this.sessionManager.setSessionIndex(event.sessions, true);\n                if (this.config.debug) {\n                    console.debug('Received user sessions:', {\n                        count: event.sessions.chat_sessions.length,\n                        total: event.sessions.total_sessions,\n                        offset: event.sessions.offset\n                    });\n                }\n            }\n        });\n    // Note: Session data will come from WebSocket initialization events\n    }\n    /**\n     * Setup session manager event handlers\n     */ setupSessionManagerHandlers() {\n        if (!this.sessionManager) return;\n        // Note: chat_session_changed events from the server are processed by EventStreamProcessor\n        // which calls sessionManager.setCurrentSession() directly. The event is not re-emitted\n        // by RealtimeClient, so we don't need a handler here.\n        // Note: Text delta and completion events are exclusively handled by EventStreamProcessor\n        // to prevent duplicate event emission and ensure proper message building\n        // Handle session name changes\n        this.on('chat_session_name_changed', (event)=>{\n            if (event.session_name) {\n                const currentSessionId = this.sessionManager.getCurrentSessionId();\n                if (currentSessionId) {\n                    this.sessionManager.updateSessionName(currentSessionId, event.session_name);\n                    if (this.config.debug) {\n                    // console.debug('Session name updated:', event.session_name);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Setup voice manager event handlers\n     */ setupVoiceManagerHandlers() {\n        if (!this.voiceManager) return;\n        // Subscribe to voice changes from the voice manager\n        this.voiceManager.on('voice-changed', (event)=>{\n            if (this.audioOutputService) {\n                // Convert Voice to VoiceModel for AudioOutputService\n                const voiceModel = this.convertVoiceToVoiceModel(event.currentVoice);\n                this.audioOutputService.setVoiceModel(voiceModel);\n                if (this.config.debug) {\n                // console.debug('Voice model updated in AudioOutputService:', voiceModel?.voice_id || 'null');\n                }\n            }\n        });\n    }\n    /**\n     * Convert Voice to VoiceModel format for AudioOutputService\n     */ convertVoiceToVoiceModel(voice) {\n        if (!voice) return null;\n        return {\n            voice_id: voice.voice_id,\n            format: voice.output_format || 'pcm16',\n            vendor: voice.vendor,\n            description: voice.description,\n            sampleRate: 16000 // Default sample rate for PCM16\n        };\n    }\n    /**\n     * Setup handlers for initialization events sent by server on connection\n     * Server sends 6 events in sequence: chat_user_data, avatar_list, voice_list,\n     * agent_list, tool_catalog, chat_session_changed\n     */ setupInitializationHandlers() {\n        // Handle user data event\n        this.on('chat_user_data', (event)=>{\n            if (event.user) {\n                this.userData = event.user;\n                this.initializationState.add('chat_user_data');\n                // Update auth manager's user state if available\n                if (this.authManager) {\n                    this.authManager.updateState({\n                        user: event.user\n                    });\n                }\n                if (this.config.debug) {\n                    console.debug('Received user data:', event.user.user_name);\n                }\n                this.checkInitializationComplete();\n            }\n        });\n        // Handle UI session ID changed event\n        this.on('ui_session_id_changed', (event)=>{\n            console.debug('[RealtimeClient] ui_session_id_changed handler called with:', event);\n            if (event.ui_session_id) {\n                // Update stored UI session ID for reconnection\n                this.uiSessionId = event.ui_session_id;\n                // Sync with file upload manager\n                if (this.fileUploadManager) {\n                    this.fileUploadManager.setUiSessionId(event.ui_session_id);\n                }\n                // Update auth manager's UI session ID if available\n                if (this.authManager) {\n                    this.authManager.updateState({\n                        uiSessionId: event.ui_session_id\n                    });\n                }\n                if (this.config.debug) {\n                    console.debug('UI Session ID updated:', event.ui_session_id);\n                }\n            }\n        });\n        // Listen to ChatSessionManager for chat session changes to update currentChatSessionId\n        if (this.sessionManager) {\n            this.sessionManager.on('chat-session-changed', (param)=>{\n                let { currentChatSession } = param;\n                console.debug('[RealtimeClient] chat-session-changed handler called with:', currentChatSession);\n                if (currentChatSession && currentChatSession.session_id) {\n                    // Update stored chat session ID for reconnection\n                    this.currentChatSessionId = currentChatSession.session_id;\n                    if (this.config.debug) {\n                        console.debug('Chat Session ID updated for reconnection:', this.currentChatSessionId);\n                    }\n                }\n            });\n        }\n        // Handle avatar list event\n        this.on('avatar_list', (event)=>{\n            if (event.avatars) {\n                this.avatars = event.avatars;\n                this.initializationState.add('avatar_list');\n                // Update avatar manager\n                if (this.avatarManager) {\n                    this.avatarManager.updateAvailableAvatars(event.avatars);\n                }\n                if (this.config.debug) {\n                    console.debug('Received avatars:', event.avatars.length);\n                }\n                this.checkInitializationComplete();\n            }\n        });\n        // Handle voice list event\n        this.on('voice_list', (event)=>{\n            if (event.voices) {\n                this.voices = event.voices;\n                this.initializationState.add('voice_list');\n                // Update voice manager\n                if (this.voiceManager) {\n                    this.voiceManager.setAvailableVoices(event.voices);\n                }\n                if (this.config.debug) {\n                    console.debug('Received voices:', event.voices.length);\n                }\n                this.checkInitializationComplete();\n            }\n        });\n        // Handle agent list event\n        this.on('agent_list', (event)=>{\n            if (event.agents) {\n                this.agents = event.agents;\n                this.initializationState.add('agent_list');\n                if (this.config.debug) {\n                    console.debug('Received agents:', event.agents.length);\n                }\n                this.checkInitializationComplete();\n            }\n        });\n        // Handle tool catalog event\n        this.on('tool_catalog', (event)=>{\n            if (event.tools) {\n                this.tools = event.tools;\n                this.initializationState.add('tool_catalog');\n                if (this.config.debug) {\n                    console.debug('Received tools:', event.tools.length);\n                }\n                this.checkInitializationComplete();\n            }\n        });\n        // The 6th event (chat_session_changed) is already handled in setupSessionManagerHandlers\n        // We track it for initialization completion\n        this.on('chat_session_changed', ()=>{\n            if (!this.initializationState.has('chat_session_changed')) {\n                this.initializationState.add('chat_session_changed');\n                this.checkInitializationComplete();\n            }\n        });\n        // Handle agent configuration changes\n        this.on('agent_configuration_changed', (event)=>{\n            if (event.agent_config && this.sessionManager) {\n                // Update the current session's agent configuration\n                const currentSession = this.sessionManager.getCurrentSession();\n                if (currentSession) {\n                    currentSession.agent_config = event.agent_config;\n                    if (this.config.debug) {\n                        console.debug('Agent configuration updated:', event.agent_config.key);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Check if all initialization events have been received\n     */ checkInitializationComplete() {\n        const requiredEvents = [\n            'chat_user_data',\n            'avatar_list',\n            'voice_list',\n            'agent_list',\n            'tool_catalog',\n            'chat_session_changed'\n        ];\n        const allReceived = requiredEvents.every((event)=>this.initializationState.has(event));\n        if (allReceived && !this.isInitialized) {\n            this.isInitialized = true;\n            if (this.config.debug) {\n                console.debug('Initialization complete - all 6 events received');\n            }\n            // Handle session recovery or agent preference after initialization\n            this.handlePostInitializationRecovery();\n            // Emit a custom event to signal initialization is complete\n            this.emit('initialized', undefined);\n        }\n    }\n    /**\n     * Handle session recovery or agent preference after initialization completes\n     * This ensures we don't conflict with server initialization events\n     */ handlePostInitializationRecovery() {\n        // Defer execution to ensure WebSocket is ready for new messages\n        setTimeout(()=>{\n            if (this.isReconnecting) {\n                // We're reconnecting - session recovery is handled by URL parameters\n                // The server will automatically resume the session if chat_session_id was provided\n                // If not, check if we should create a new session with preferred agent\n                if (!this.currentChatSessionId && this.preferredAgentKey) {\n                    if (this.config.debug) {\n                        console.debug('Reconnection: no session to resume, creating new session with preferred agent', this.preferredAgentKey);\n                    }\n                    this.newChatSession(this.preferredAgentKey);\n                }\n                this.isReconnecting = false; // Clear reconnection flag\n            } else if (this.preferredAgentKey && !this.currentChatSessionId) {\n                // Initial connection with preferred agent (not reconnection)\n                if (this.config.debug) {\n                    console.debug('Initial connection: creating session with preferred agent', this.preferredAgentKey);\n                }\n                this.newChatSession(this.preferredAgentKey);\n            }\n        }, 0);\n    }\n    /**\n     * Initialize the audio system components\n     */ initializeAudioSystem() {\n        if (!this.audioConfig) return;\n        try {\n            // Get singleton instances\n            this.audioService = _audio__WEBPACK_IMPORTED_MODULE_7__.AudioService.getInstance();\n            this.audioBridge = _audio__WEBPACK_IMPORTED_MODULE_7__.AudioAgentCBridge.getInstance();\n            this.audioOutputService = _audio__WEBPACK_IMPORTED_MODULE_7__.AudioOutputService.getInstance();\n            // Configure audio bridge with this client\n            this.audioBridge.setClient(this);\n            // The turn manager integration is handled by the AudioAgentCBridge\n            // which checks turn state before streaming if respectTurnState is enabled\n            // Set initial volume\n            if (this.audioConfig.initialVolume !== undefined) {\n                this.audioOutputService.setVolume(this.audioConfig.initialVolume);\n            }\n            // Subscribe to audio output events for playback\n            this.on('audio:output', (audioData)=>{\n                var _this_audioConfig;\n                if (((_this_audioConfig = this.audioConfig) === null || _this_audioConfig === void 0 ? void 0 : _this_audioConfig.enableOutput) && this.audioOutputService) {\n                    this.audioOutputService.playAudioChunk(audioData);\n                }\n            });\n            // Subscribe to voice model changes from server\n            this.on('agent_voice_changed', (event)=>{\n                if (this.voiceManager && event.voice) {\n                    // Let voice manager handle the server voice change\n                    this.voiceManager.handleServerVoiceChange(event.voice.voice_id);\n                }\n            });\n            if (this.config.debug) {\n                console.warn('Audio system initialized');\n            }\n        } catch (error) {\n            console.error('Failed to initialize audio system:', error);\n            this.emit('error', {\n                type: 'error',\n                message: 'Failed to initialize audio system',\n                source: 'audio_init'\n            });\n        }\n    }\n    /**\n     * Connect to the Realtime API\n     */ async connect() {\n        if (this.connectionState === _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTED) {\n            return;\n        }\n        if (this.connectionState === _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTING) {\n            throw new Error('Already connecting');\n        }\n        // Get auth token from manager if available\n        if (this.authManager && !this.authToken) {\n            const tokens = this.authManager.getTokens();\n            if (tokens) {\n                this.authToken = tokens.agentCToken;\n            }\n        }\n        // Get UI session ID from auth manager if available\n        if (this.authManager && !this.uiSessionId) {\n            const uiSessionId = this.authManager.getUiSessionId();\n            if (uiSessionId) {\n                this.uiSessionId = uiSessionId;\n            }\n        }\n        // Check for auth token before connecting\n        if (!this.authToken) {\n            // Try to get token from authManager if available\n            if (this.authManager) {\n                const tokens = this.authManager.getTokens();\n                if (tokens) {\n                    this.authToken = tokens.agentCToken;\n                }\n            }\n            // If still no token, fail with error event and exception\n            if (!this.authToken) {\n                const errorEvent = {\n                    type: 'error',\n                    message: 'Authentication required',\n                    source: 'auth'\n                };\n                this.emit('error', errorEvent);\n                const error = new Error('Authentication token is required for connection');\n                if (this.config.debug) {\n                    console.error('[RealtimeClient] Cannot connect: No authentication token available');\n                }\n                throw error;\n            }\n        }\n        this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTING);\n        return new Promise((resolve, reject)=>{\n            try {\n                const wsUrl = this.buildWebSocketUrl();\n                this.wsManager = new _WebSocketManager__WEBPACK_IMPORTED_MODULE_3__.WebSocketManager({\n                    url: wsUrl,\n                    protocols: this.config.protocols,\n                    // Ensure binaryType is always 'arraybuffer' for proper audio handling\n                    binaryType: 'arraybuffer',\n                    pingInterval: this.config.pingInterval,\n                    pongTimeout: this.config.pongTimeout\n                }, {\n                    onOpen: ()=>{\n                        var _this_audioConfig;\n                        this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTED);\n                        this.reconnectionManager.reset();\n                        this.emit('connected', undefined);\n                        // Setup session manager handlers when connected\n                        this.setupSessionManagerHandlers();\n                        // Reconnect audio bridge if audio is enabled\n                        if (this.audioBridge && ((_this_audioConfig = this.audioConfig) === null || _this_audioConfig === void 0 ? void 0 : _this_audioConfig.enableInput)) {\n                            this.audioBridge.setClient(this);\n                        }\n                        // Session recovery will happen after initialization completes\n                        // This ensures we don't conflict with server initialization events\n                        resolve();\n                    },\n                    onClose: (event)=>{\n                        this.handleDisconnection(event.code, event.reason);\n                    },\n                    onError: ()=>{\n                        this.emit('error', {\n                            type: 'error',\n                            message: 'WebSocket error occurred',\n                            source: 'websocket'\n                        });\n                        if (this.connectionState === _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTING) {\n                            reject(new Error('Failed to connect'));\n                        }\n                    },\n                    onMessage: (data)=>{\n                        this.handleMessage(data);\n                    }\n                });\n                this.wsManager.connect();\n                // Set connection timeout\n                if (this.config.connectionTimeout) {\n                    setTimeout(()=>{\n                        if (this.connectionState === _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTING) {\n                            var _this_wsManager;\n                            (_this_wsManager = this.wsManager) === null || _this_wsManager === void 0 ? void 0 : _this_wsManager.disconnect(1000, 'Connection timeout');\n                            reject(new Error('Connection timeout'));\n                        }\n                    }, this.config.connectionTimeout);\n                }\n            } catch (error) {\n                this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.DISCONNECTED);\n                reject(error);\n            }\n        });\n    }\n    /**\n     * Disconnect from the Realtime API\n     */ disconnect() {\n        var _this_audioBridge, _this_audioService;\n        this.reconnectionManager.stopReconnection();\n        this.isReconnecting = false; // Clear reconnection flag if disconnect is called\n        // Stop audio streaming if active\n        if ((_this_audioBridge = this.audioBridge) === null || _this_audioBridge === void 0 ? void 0 : _this_audioBridge.getStatus().isStreaming) {\n            this.audioBridge.stopStreaming();\n        }\n        // Stop audio recording if active\n        if ((_this_audioService = this.audioService) === null || _this_audioService === void 0 ? void 0 : _this_audioService.getStatus().isRecording) {\n            this.audioService.stopRecording();\n        }\n        // Clear audio output buffers\n        if (this.audioOutputService) {\n            this.audioOutputService.clearBuffers();\n        }\n        // Clear session manager accumulator\n        if (this.sessionManager) {\n            this.sessionManager.resetAccumulator();\n        }\n        // Reset event stream processor\n        if (this.eventStreamProcessor) {\n            this.eventStreamProcessor.reset();\n        }\n        // Reset initialization state for next connection\n        this.initializationState.clear();\n        this.isInitialized = false;\n        if (this.wsManager) {\n            this.wsManager.disconnect(1000, 'Client disconnect');\n            this.wsManager = null;\n        }\n        this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.DISCONNECTED);\n    }\n    /**\n     * Send a raw event to the server\n     *\n     * @public\n     * @param event - The event object to send to the server. Must be a valid ClientEventMap event type.\n     * @throws {Error} If not connected to the server\n     *\n     * @example\n     * ```typescript\n     * // Send a custom event to the server\n     * client.sendEvent({ type: 'custom_event', data: 'example' });\n     * ```\n     */ sendEvent(event) {\n        if (!this.wsManager || !this.wsManager.isConnected()) {\n            throw new Error('Not connected to server');\n        }\n        this.wsManager.sendJSON(event);\n    }\n    /**\n     * Send binary audio data to the server\n     * @deprecated Use sendBinaryFrame instead\n     */ sendAudio(audioData) {\n        this.sendBinaryFrame(audioData);\n    }\n    /**\n     * Send raw binary frame to the server\n     * This sends audio data directly as binary, NOT wrapped in JSON events\n     * @param data Raw binary audio data (PCM16 format)\n     */ sendBinaryFrame(data) {\n        if (!this.wsManager || !this.wsManager.isConnected()) {\n            throw new Error('Not connected to server');\n        }\n        if (!this.wsManager.supportsBinary()) {\n            throw new Error('WebSocket connection does not support binary frames');\n        }\n        // Send the raw binary data directly over the WebSocket\n        // This is NOT wrapped in an AudioInputDelta event - it's raw PCM16 audio\n        this.wsManager.sendBinary(data);\n        if (this.config.debug) {\n        // const byteLength = data instanceof ArrayBuffer ? data.byteLength : data.byteLength;\n        // console.debug('Sent binary audio frame:', byteLength, 'bytes');\n        }\n    }\n    // Client command methods\n    /**\n     * Get list of available agents\n     */ getAgents() {\n        this.sendEvent({\n            type: 'get_agents'\n        });\n    }\n    /**\n     * Set the active agent\n     */ setAgent(agentKey) {\n        this.sendEvent({\n            type: 'set_agent',\n            agent_key: agentKey\n        });\n    }\n    /**\n     * Get list of available avatars\n     */ getAvatars() {\n        this.sendEvent({\n            type: 'get_avatars'\n        });\n    }\n    /**\n     * Set the avatar for the current session.\n     * This creates a new HeyGen avatar session with the specified avatar.\n     *\n     * @param avatarId - The ID of the avatar to set\n     * @param quality - Optional quality setting (default: \"auto\")\n     * @param videoEncoding - Optional video encoding (default: \"H265\")\n     */ setAvatar(avatarId, quality, videoEncoding) {\n        // Send event to Agent C to create avatar session\n        this.sendEvent({\n            type: 'set_avatar',\n            avatar_id: avatarId,\n            quality: quality,\n            video_encoding: videoEncoding\n        });\n        if (this.config.debug) {\n            console.debug('Setting avatar:', {\n                avatarId,\n                quality,\n                videoEncoding\n            });\n        }\n    }\n    /**\n     * Set avatar session after HeyGen STREAM_READY event.\n     * This notifies Agent C that an avatar session is active.\n     *\n     * @param accessToken - HeyGen access token for the session\n     * @param avatarSessionId - HeyGen avatar session ID\n     */ setAvatarSession(accessToken, avatarSessionId) {\n        // Update avatar manager state\n        if (this.avatarManager) {\n            this.avatarManager.setAvatarSession(avatarSessionId, avatarSessionId);\n        }\n        // Send event to Agent C with correct field names from API spec\n        this.sendEvent({\n            type: 'set_avatar_session',\n            access_token: accessToken,\n            avatar_session_id: avatarSessionId\n        });\n        // Voice manager will automatically switch to avatar voice when server responds\n        if (this.config.debug) {\n        // console.debug('Avatar session set:', { accessToken, avatarSessionId });\n        }\n    }\n    /**\n     * Clear avatar session when HeyGen session ends\n     */ clearAvatarSession() {\n        if (this.avatarManager) {\n            const sessionId = this.avatarManager.getSessionId();\n            this.avatarManager.clearAvatarSession();\n            // Optionally send clear event to server\n            // The server should detect this from HeyGen webhooks but we can be explicit\n            if (sessionId) {\n                this.sendEvent({\n                    type: 'clear_avatar_session',\n                    session_id: sessionId\n                });\n            }\n        }\n    }\n    /**\n     * Set agent voice\n     */ setAgentVoice(voiceId) {\n        // Update voice manager locally\n        if (this.voiceManager) {\n            this.voiceManager.setCurrentVoice(voiceId, 'client');\n        }\n        // Send to server\n        this.sendEvent({\n            type: 'set_agent_voice',\n            voice_id: voiceId\n        });\n    }\n    /**\n     * Send text input to the agent\n     *\n     * Note: The user message will be added to the session when the server\n     * responds with a UserMessageEvent, maintaining the server as the\n     * single source of truth for message history.\n     */ sendText(text, fileIds) {\n        const event = {\n            type: 'text_input',\n            text\n        };\n        if (fileIds && fileIds.length > 0) {\n            event.file_ids = fileIds;\n        }\n        this.sendEvent(event);\n    }\n    /**\n     * Create a new chat session\n     */ newChatSession(agentKey) {\n        // Clear the stored session ID since we're explicitly starting a new session\n        this.currentChatSessionId = undefined;\n        // Reset accumulator when creating new session\n        if (this.sessionManager) {\n            this.sessionManager.resetAccumulator();\n        }\n        const event = {\n            type: 'new_chat_session'\n        };\n        if (agentKey) {\n            event.agent_key = agentKey;\n        }\n        this.sendEvent(event);\n    }\n    /**\n     * Resume an existing chat session\n     */ resumeChatSession(sessionId) {\n        // Reset accumulator when switching sessions\n        if (this.sessionManager) {\n            this.sessionManager.resetAccumulator();\n        }\n        this.sendEvent({\n            type: 'resume_chat_session',\n            session_id: sessionId\n        });\n    }\n    /**\n     * Set chat session name\n     */ setChatSessionName(sessionName) {\n        // Update local session name immediately for better UX\n        if (this.sessionManager) {\n            const currentSessionId = this.sessionManager.getCurrentSessionId();\n            if (currentSessionId) {\n                this.sessionManager.updateSessionName(currentSessionId, sessionName);\n            }\n        }\n        this.sendEvent({\n            type: 'set_chat_session_name',\n            session_name: sessionName\n        });\n    }\n    /**\n     * Set session metadata\n     */ setSessionMetadata(meta) {\n        this.sendEvent({\n            type: 'set_session_metadata',\n            meta\n        });\n    }\n    /**\n     * Set session messages\n     */ setSessionMessages(messages) {\n        this.sendEvent({\n            type: 'set_session_messages',\n            messages\n        });\n    }\n    /**\n     * Fetch paginated list of user sessions\n     * @param offset Starting offset for pagination (default 0)\n     * @param limit Number of sessions to fetch (default 50)\n     */ fetchUserSessions() {\n        let offset = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 50;\n        const event = {\n            type: 'get_user_sessions',\n            offset,\n            limit\n        };\n        this.sendEvent(event);\n        if (this.config.debug) {\n            console.debug('Requesting user sessions:', {\n                offset,\n                limit\n            });\n        }\n    }\n    /**\n     * Request list of available voices from server\n     * Server responds with voice_list event\n     */ getVoices() {\n        this.sendEvent({\n            type: 'get_voices'\n        });\n    }\n    /**\n     * Request tool catalog from server\n     * Server responds with tool_catalog event\n     */ getToolCatalog() {\n        this.sendEvent({\n            type: 'get_tool_catalog'\n        });\n    }\n    /**\n     * Send ping to server for connection health check\n     * Server responds with pong event\n     */ ping() {\n        this.sendEvent({\n            type: 'ping'\n        });\n    }\n    /**\n     * Cancel the current agent response\n     * Sends a request to the server to cancel the ongoing agent response.\n     * Server will respond with a 'cancelled' event to confirm.\n     */ cancelResponse() {\n        const timestamp = Date.now();\n        const event = {\n            type: 'client_wants_cancel'\n        };\n        if (this.config.debug) {\n            var _this_wsManager_getReadyState, _this_wsManager, _this_wsManager_getBufferedAmount, _this_wsManager1;\n            console.debug(\"[\".concat(timestamp, \"] cancelResponse() called\"));\n            var _this_wsManager_getReadyState1;\n            console.debug(\"[\".concat(timestamp, \"] WebSocket readyState: \").concat((_this_wsManager_getReadyState1 = (_this_wsManager = this.wsManager) === null || _this_wsManager === void 0 ? void 0 : (_this_wsManager_getReadyState = _this_wsManager.getReadyState) === null || _this_wsManager_getReadyState === void 0 ? void 0 : _this_wsManager_getReadyState.call(_this_wsManager)) !== null && _this_wsManager_getReadyState1 !== void 0 ? _this_wsManager_getReadyState1 : 'unknown'));\n            // Check if there's buffered data that might delay the cancel\n            const bufferedAmount = (_this_wsManager1 = this.wsManager) === null || _this_wsManager1 === void 0 ? void 0 : (_this_wsManager_getBufferedAmount = _this_wsManager1.getBufferedAmount) === null || _this_wsManager_getBufferedAmount === void 0 ? void 0 : _this_wsManager_getBufferedAmount.call(_this_wsManager1);\n            if (bufferedAmount && bufferedAmount > 0) {\n                console.warn(\"[\".concat(timestamp, \"] WARNING: WebSocket has \").concat(bufferedAmount, \" bytes buffered before cancel - this may delay the cancel event!\"));\n            }\n        }\n        try {\n            this.sendEvent(event);\n            if (this.config.debug) {\n                var _this_wsManager_getBufferedAmount1, _this_wsManager2;\n                console.debug(\"[\".concat(timestamp, \"] client_wants_cancel event sent to WebSocket\"));\n                // Check buffered amount after send\n                const bufferedAfter = (_this_wsManager2 = this.wsManager) === null || _this_wsManager2 === void 0 ? void 0 : (_this_wsManager_getBufferedAmount1 = _this_wsManager2.getBufferedAmount) === null || _this_wsManager_getBufferedAmount1 === void 0 ? void 0 : _this_wsManager_getBufferedAmount1.call(_this_wsManager2);\n                if (bufferedAfter && bufferedAfter > 0) {\n                    console.warn(\"[\".concat(timestamp, \"] Post-send: WebSocket still has \").concat(bufferedAfter, \" bytes buffered\"));\n                }\n            }\n        } catch (error) {\n            if (this.config.debug) {\n                console.error(\"[\".concat(timestamp, \"] Failed to send cancel event:\"), error);\n            }\n            throw error;\n        }\n    }\n    /**\n     * Upload a file for use in chat messages\n     * @param file - File object to upload\n     * @param options - Upload options (progress callback, abort signal)\n     * @returns Promise resolving to file metadata (id, filename, mime_type, size)\n     * @throws Error if FileUploadManager not initialized, authentication missing, or upload fails\n     */ async uploadFile(file, options) {\n        if (!this.fileUploadManager) {\n            throw new Error('FileUploadManager not initialized');\n        }\n        return this.fileUploadManager.uploadFile(file, options);\n    }\n    /**\n     * Upload multiple files for use in chat messages\n     * @param files - Array of File objects to upload\n     * @param options - Upload options (progress callback, abort signal)\n     * @returns Promise resolving to array of file metadata\n     * @throws Error if FileUploadManager not initialized, authentication missing, or upload fails\n     */ async uploadFiles(files, options) {\n        if (!this.fileUploadManager) {\n            throw new Error('FileUploadManager not initialized');\n        }\n        return this.fileUploadManager.uploadFiles(files, options);\n    }\n    // Getters\n    /**\n     * Get current connection state\n     */ getConnectionState() {\n        return this.connectionState;\n    }\n    /**\n     * Check if connected\n     */ isConnected() {\n        return this.connectionState === _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTED;\n    }\n    /**\n     * Get the auth manager instance\n     */ getAuthManager() {\n        return this.authManager;\n    }\n    /**\n     * Get the turn manager instance\n     */ getTurnManager() {\n        return this.turnManager;\n    }\n    /**\n     * Get the voice manager instance\n     */ getVoiceManager() {\n        return this.voiceManager;\n    }\n    /**\n     * Get the session manager instance\n     */ getSessionManager() {\n        return this.sessionManager;\n    }\n    /**\n     * Get the avatar manager instance\n     */ getAvatarManager() {\n        return this.avatarManager;\n    }\n    /**\n     * Get available avatars from initialization events or avatar manager\n     */ getAvailableAvatars() {\n        var _this_avatarManager;\n        return this.avatars.length > 0 ? this.avatars : ((_this_avatarManager = this.avatarManager) === null || _this_avatarManager === void 0 ? void 0 : _this_avatarManager.getAvailableAvatars()) || [];\n    }\n    /**\n     * Get HeyGen access token for avatar session creation\n     */ getHeyGenAccessToken() {\n        if (this.authManager) {\n            const tokens = this.authManager.getTokens();\n            return (tokens === null || tokens === void 0 ? void 0 : tokens.heygenToken) || null;\n        }\n        return null;\n    }\n    /**\n     * Get current user data from initialization events\n     */ getUserData() {\n        return this.userData;\n    }\n    /**\n     * Get available agents from initialization events\n     */ getAgentsList() {\n        return this.agents;\n    }\n    /**\n     * Get current agent configuration from the active session\n     * Returns null if no session is active\n     */ getCurrentAgentConfig() {\n        if (this.sessionManager) {\n            const currentSession = this.sessionManager.getCurrentSession();\n            return (currentSession === null || currentSession === void 0 ? void 0 : currentSession.agent_config) || null;\n        }\n        return null;\n    }\n    /**\n     * Get available voices from initialization events\n     */ getVoicesList() {\n        return this.voices;\n    }\n    /**\n     * Get available tools from initialization events\n     */ getTools() {\n        return this.tools;\n    }\n    /**\n     * Check if client has completed initialization\n     * All 6 initialization events must be received\n     */ isFullyInitialized() {\n        return this.isInitialized;\n    }\n    /**\n     * Wait for initialization to complete\n     * Returns a promise that resolves when all 6 initialization events are received\n     */ waitForInitialization() {\n        return new Promise((resolve)=>{\n            if (this.isInitialized) {\n                resolve();\n            } else {\n                this.once('initialized', ()=>{\n                    resolve();\n                });\n            }\n        });\n    }\n    // Audio control methods\n    /**\n     * Start audio recording from microphone\n     */ async startAudioRecording() {\n        var _this_audioConfig;\n        if (!this.audioService) {\n            throw new Error('Audio system not initialized');\n        }\n        if (!((_this_audioConfig = this.audioConfig) === null || _this_audioConfig === void 0 ? void 0 : _this_audioConfig.enableInput)) {\n            throw new Error('Audio input is disabled');\n        }\n        await this.audioService.startRecording();\n    }\n    /**\n     * Stop audio recording\n     */ stopAudioRecording() {\n        if (!this.audioService) {\n            throw new Error('Audio system not initialized');\n        }\n        this.audioService.stopRecording();\n    }\n    /**\n     * Start streaming audio to server\n     */ startAudioStreaming() {\n        if (!this.audioBridge) {\n            throw new Error('Audio system not initialized');\n        }\n        if (!this.isConnected()) {\n            throw new Error('Not connected to server');\n        }\n        this.audioBridge.startStreaming();\n    }\n    /**\n     * Stop streaming audio to server\n     */ stopAudioStreaming() {\n        if (!this.audioBridge) {\n            throw new Error('Audio system not initialized');\n        }\n        this.audioBridge.stopStreaming();\n    }\n    /**\n     * Set audio playback volume\n     * @param volume Volume level (0-1)\n     */ setAudioVolume(volume) {\n        if (!this.audioOutputService) {\n            throw new Error('Audio output not initialized');\n        }\n        if (volume < 0 || volume > 1) {\n            throw new Error('Volume must be between 0 and 1');\n        }\n        this.audioOutputService.setVolume(volume);\n    }\n    /**\n     * Get combined audio system status\n     */ getAudioStatus() {\n        var _this_audioService, _this_audioBridge, _this_audioOutputService, _this_audioConfig, _this_audioConfig1;\n        const inputStatus = (_this_audioService = this.audioService) === null || _this_audioService === void 0 ? void 0 : _this_audioService.getStatus();\n        const bridgeStatus = (_this_audioBridge = this.audioBridge) === null || _this_audioBridge === void 0 ? void 0 : _this_audioBridge.getStatus();\n        const outputStatus = (_this_audioOutputService = this.audioOutputService) === null || _this_audioOutputService === void 0 ? void 0 : _this_audioOutputService.getStatus();\n        return {\n            // Input status\n            isRecording: (inputStatus === null || inputStatus === void 0 ? void 0 : inputStatus.isRecording) || false,\n            isStreaming: (bridgeStatus === null || bridgeStatus === void 0 ? void 0 : bridgeStatus.isStreaming) || false,\n            isProcessing: (inputStatus === null || inputStatus === void 0 ? void 0 : inputStatus.state) === 'recording' || false,\n            hasPermission: (inputStatus === null || inputStatus === void 0 ? void 0 : inputStatus.state) !== 'permission-denied' && (inputStatus === null || inputStatus === void 0 ? void 0 : inputStatus.state) !== 'idle',\n            currentLevel: (inputStatus === null || inputStatus === void 0 ? void 0 : inputStatus.audioLevel) || 0,\n            averageLevel: (inputStatus === null || inputStatus === void 0 ? void 0 : inputStatus.audioLevel) || 0,\n            // Output status\n            isPlaying: (outputStatus === null || outputStatus === void 0 ? void 0 : outputStatus.isPlaying) || false,\n            bufferSize: (outputStatus === null || outputStatus === void 0 ? void 0 : outputStatus.queueLength) || 0,\n            volume: (outputStatus === null || outputStatus === void 0 ? void 0 : outputStatus.volume) || 1,\n            // System status\n            isAudioEnabled: !!this.audioService,\n            isInputEnabled: !!((_this_audioConfig = this.audioConfig) === null || _this_audioConfig === void 0 ? void 0 : _this_audioConfig.enableInput),\n            isOutputEnabled: !!((_this_audioConfig1 = this.audioConfig) === null || _this_audioConfig1 === void 0 ? void 0 : _this_audioConfig1.enableOutput)\n        };\n    }\n    /**\n     * Set the auth manager instance\n     */ setAuthManager(authManager) {\n        // Unsubscribe from previous manager\n        if (this.authManager) {\n            this.authManager.removeAllListeners();\n        }\n        this.authManager = authManager;\n        // Subscribe to token refresh events\n        this.authManager.on('auth:tokens-refreshed', (tokens)=>{\n            this.authToken = tokens.agentCToken;\n            // If connected, reconnect with new token\n            if (this.isConnected()) {\n                this.disconnect();\n                this.connect();\n            }\n        });\n        // Get initial token if available\n        const tokens = this.authManager.getTokens();\n        if (tokens) {\n            this.authToken = tokens.agentCToken;\n        }\n    // Note: Voice and avatar data will come from WebSocket initialization events\n    }\n    /**\n     * Update authentication token\n     */ setAuthToken(token) {\n        this.authToken = token;\n        // Sync with file upload manager\n        if (this.fileUploadManager) {\n            this.fileUploadManager.setAuthToken(token);\n        }\n        // If connected, we need to reconnect with new token\n        if (this.isConnected()) {\n            this.disconnect();\n            this.connect();\n        }\n    }\n    /**\n     * Update session ID\n     */ setUiSessionId(uiSessionId) {\n        this.uiSessionId = uiSessionId;\n        // Sync with file upload manager\n        if (this.fileUploadManager && uiSessionId) {\n            this.fileUploadManager.setUiSessionId(uiSessionId);\n        }\n        // If connected, we need to reconnect with new UI session ID\n        if (this.isConnected()) {\n            this.disconnect();\n            this.connect();\n        }\n    }\n    /**\n     * Set the preferred agent key to use when creating new chat sessions.\n     * This agent key will be used automatically when:\n     * - Creating a new chat session on initial connection\n     * - Creating a new chat session after reconnection (if no session to resume)\n     *\n     * @param agentKey - The agent key to use for new sessions, or undefined to clear\n     */ setPreferredAgentKey(agentKey) {\n        this.preferredAgentKey = agentKey;\n    }\n    // Private methods\n    /**\n     * Build WebSocket URL with authentication\n     */ buildWebSocketUrl() {\n        if (!this.authToken) {\n            // CRITICAL FIX: More descriptive error for missing auth\n            // This helps identify auth issues vs connection issues\n            throw new Error('Authentication token is required to build WebSocket URL. Ensure auth is initialized before connecting.');\n        }\n        // Parse the base URL to handle protocol conversion\n        const baseUrl = this.config.apiUrl;\n        const parsedUrl = new URL(baseUrl);\n        // Convert HTTP(S) to WS(S) protocol\n        let protocol = parsedUrl.protocol;\n        if (protocol === 'http:') {\n            protocol = 'ws:';\n        } else if (protocol === 'https:') {\n            protocol = 'wss:';\n        } else if (protocol !== 'ws:' && protocol !== 'wss:') {\n            throw new Error(\"Invalid protocol in apiUrl: \".concat(protocol, \". Must be http, https, ws, or wss\"));\n        }\n        // Build the WebSocket URL with the correct endpoint path\n        // Always use /api/rt/ws as the path, ignoring any path in the base URL\n        const url = new URL(\"\".concat(protocol, \"//\").concat(parsedUrl.host, \"/api/rt/ws\"));\n        url.searchParams.set('token', this.authToken);\n        // CRITICAL: Always send ui_session_id if available (not session_id)\n        // This identifies the client instance for reconnection\n        // Try to get ui_session_id from multiple sources: direct property or AuthManager\n        let effectiveUiSessionId = this.uiSessionId;\n        if (!effectiveUiSessionId && this.authManager) {\n            effectiveUiSessionId = this.authManager.getUiSessionId() || null;\n        }\n        console.debug('[RealtimeClient] Building WebSocket URL - uiSessionId:', effectiveUiSessionId);\n        if (effectiveUiSessionId) {\n            url.searchParams.set('ui_session_id', effectiveUiSessionId);\n            console.debug('[RealtimeClient] Added ui_session_id to URL:', effectiveUiSessionId);\n        } else {\n            console.debug('[RealtimeClient] No ui_session_id available for WebSocket connection');\n        }\n        // Add connection context parameters\n        // Priority: reconnection parameters take precedence over first connection parameters\n        if (this.isReconnecting && this.currentChatSessionId) {\n            // Add chat_session_id parameter for reconnection recovery\n            url.searchParams.append('chat_session_id', this.currentChatSessionId);\n            if (this.config.debug) {\n                console.debug(\"[WebSocket] Adding chat_session_id for reconnection: \".concat(this.currentChatSessionId));\n            }\n        } else if (this.preferredAgentKey) {\n            // Add agent_key parameter for first connection with agent preference\n            url.searchParams.append('agent_key', this.preferredAgentKey);\n            if (this.config.debug) {\n                console.debug(\"[WebSocket] Adding agent_key for first connection: \".concat(this.preferredAgentKey));\n            }\n        }\n        // NEVER send both parameters simultaneously - enforced by else-if structure\n        return url.toString();\n    }\n    /**\n     * Handle incoming messages from WebSocket\n     * Supports both JSON events and binary audio frames\n     */ handleMessage(data) {\n        if (typeof data === 'string') {\n            // JSON message - parse as event\n            try {\n                const event = JSON.parse(data);\n                // Log EVERY event received\n                console.debug('[RealtimeClient] Raw event received:', event.type); //, event);\n                if (event && typeof event.type === 'string') {\n                    // Debug logging for ui_session_id_changed\n                    if (event.type === 'ui_session_id_changed') {\n                        console.debug('[RealtimeClient] Received ui_session_id_changed event:', event);\n                    }\n                    // Debug logging for turn and cancel events\n                    if (this.config.debug && (event.type === 'user_turn_start' || event.type === 'user_turn_end' || event.type === 'agent_turn_start' || event.type === 'agent_turn_end' || event.type === 'cancelled')) {\n                        console.debug(\"[\".concat(Date.now(), \"] Received \").concat(event.type, \" event from server\"));\n                    }\n                    // Handle ping events with pong response\n                    if (event.type === 'ping') {\n                        var // Send pong directly via WebSocket, not through sendEvent\n                        _this_wsManager;\n                        (_this_wsManager = this.wsManager) === null || _this_wsManager === void 0 ? void 0 : _this_wsManager.sendJSON({\n                            type: 'pong'\n                        });\n                        if (this.config.debug) {\n                        // console.debug('Received ping, sent pong');\n                        }\n                        return;\n                    }\n                    // Handle pong events (no action needed, just acknowledge)\n                    if (event.type === 'pong') {\n                        if (this.config.debug) {\n                        // console.debug('Received pong');\n                        }\n                        return;\n                    }\n                    // Process events through EventStreamProcessor if applicable\n                    let processedByEventStream = false;\n                    if (this.eventStreamProcessor) {\n                        const eventTypesToProcess = [\n                            'interaction',\n                            'text_delta',\n                            'thought_delta',\n                            'completion',\n                            'tool_select_delta',\n                            'tool_call',\n                            'render_media',\n                            'system_message',\n                            'error',\n                            'history_delta',\n                            'chat_session_changed',\n                            'user_message',\n                            'anthropic_user_message',\n                            'subsession_started',\n                            'subsession_ended',\n                            'cancelled'\n                        ];\n                        if (eventTypesToProcess.includes(event.type)) {\n                            this.eventStreamProcessor.processEvent(event);\n                            processedByEventStream = true;\n                        }\n                    }\n                    // Only emit events that weren't processed by EventStreamProcessor\n                    // EventStreamProcessor handles its own event emission for streaming events\n                    if (!processedByEventStream) {\n                        // Debug ui_session_id_changed specifically\n                        if (event.type === 'ui_session_id_changed') {\n                            console.debug('[RealtimeClient] About to emit ui_session_id_changed:', event);\n                        }\n                        this.emit(event.type, event);\n                    }\n                    if (this.config.debug) {\n                    // console.debug('Received event:', event.type, event);\n                    }\n                } else {\n                    console.warn('Invalid event structure:', event);\n                }\n            } catch (error) {\n                console.error('Failed to parse JSON message:', error);\n                this.emit('error', {\n                    type: 'error',\n                    message: 'Failed to parse server message',\n                    source: 'message_parser'\n                });\n            }\n        } else if (data instanceof ArrayBuffer) {\n            // Binary message - this is raw audio data from the server\n            // Emit as 'audio:output' for consistency with the audio system\n            this.emit('audio:output', data);\n            // Also emit the legacy event for backward compatibility\n            this.emit('binary_audio', data);\n            if (this.config.debug) {\n            // console.debug('Received binary audio frame:', data.byteLength, 'bytes');\n            }\n        } else {\n            console.warn('Unknown message type:', typeof data);\n        }\n    }\n    /**\n     * Handle disconnection and trigger reconnection if needed\n     */ handleDisconnection(code, reason) {\n        const wasConnected = this.connectionState === _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTED;\n        this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.DISCONNECTED);\n        this.emit('disconnected', {\n            code,\n            reason\n        });\n        // Attempt reconnection if configured and wasn't a clean disconnect\n        if (wasConnected && this.config.autoReconnect && code !== 1000) {\n            this.attemptReconnection();\n        }\n    }\n    /**\n     * Attempt to reconnect to the server\n     */ attemptReconnection() {\n        var _this_authManager_getTokens;\n        // Check if we have auth before attempting reconnection\n        if (!this.authToken && (!this.authManager || !((_this_authManager_getTokens = this.authManager.getTokens()) === null || _this_authManager_getTokens === void 0 ? void 0 : _this_authManager_getTokens.agentCToken))) {\n            if (this.config.debug) {\n                console.error('[RealtimeClient] Cannot reconnect: No authentication token available');\n            }\n            // Emit error event for UI handling\n            const errorEvent = {\n                type: 'error',\n                message: 'Authentication required for reconnection',\n                source: 'auth'\n            };\n            this.emit('error', errorEvent);\n            // Don't attempt reconnection without auth\n            return;\n        }\n        this.isReconnecting = true; // Mark that we're reconnecting\n        // The current chat session ID is already stored and will be used in buildWebSocketUrl\n        this.reconnectionManager.startReconnection(async ()=>{\n            await this.connect();\n        }).catch((error)=>{\n            this.isReconnecting = false; // Clear reconnection flag on failure\n            if (this.config.debug) {\n                console.error('Reconnection failed:', error);\n            }\n            // If it's an auth error, don't keep retrying\n            if (error.message && error.message.includes('Authentication')) {\n                this.reconnectionManager.stopReconnection();\n            }\n        });\n    }\n    /**\n     * Update connection state and emit event\n     */ setConnectionState(state) {\n        if (this.connectionState !== state) {\n            this.connectionState = state;\n            if (this.config.debug) {\n            // console.debug('Connection state changed:', ConnectionState[state]);\n            }\n        }\n    }\n    /**\n     * Clean up resources\n     */ destroy() {\n        var _this_audioBridge, _this_audioService;\n        // Stop and clean up audio first\n        if ((_this_audioBridge = this.audioBridge) === null || _this_audioBridge === void 0 ? void 0 : _this_audioBridge.getStatus().isStreaming) {\n            this.audioBridge.stopStreaming();\n        }\n        if ((_this_audioService = this.audioService) === null || _this_audioService === void 0 ? void 0 : _this_audioService.getStatus().isRecording) {\n            this.audioService.stopRecording();\n        }\n        // Note: We don't destroy the singletons, just clean up our references\n        this.audioService = null;\n        if (this.audioBridge) {\n            this.audioBridge.setClient(null);\n            this.audioBridge = null;\n        }\n        if (this.audioOutputService) {\n            this.audioOutputService.clearBuffers();\n            this.audioOutputService = null;\n        }\n        this.disconnect();\n        if (this.authManager) {\n            this.authManager.removeAllListeners();\n        }\n        if (this.turnManager) {\n            this.turnManager.destroy();\n            this.turnManager = null;\n        }\n        if (this.voiceManager) {\n            this.voiceManager.removeAllListeners();\n            this.voiceManager = null;\n        }\n        if (this.sessionManager) {\n            this.sessionManager.destroy();\n            this.sessionManager = null;\n        }\n        if (this.avatarManager) {\n            this.avatarManager.dispose();\n            this.avatarManager = null;\n        }\n        if (this.eventStreamProcessor) {\n            this.eventStreamProcessor.destroy();\n            this.eventStreamProcessor = null;\n        }\n        this.removeAllListeners();\n    }\n    constructor(config){\n        super();\n        this.wsManager = null;\n        this.connectionState = _ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.DISCONNECTED;\n        this.authToken = null;\n        this.uiSessionId = null; // UI session ID for WebSocket reconnection\n        this.authManager = null;\n        this.turnManager = null;\n        this.voiceManager = null;\n        this.sessionManager = null;\n        this.avatarManager = null;\n        this.eventStreamProcessor = null;\n        this.fileUploadManager = null;\n        this.isReconnecting = false; // Track if we're in a reconnection scenario\n        // Audio system components\n        this.audioService = null;\n        this.audioBridge = null;\n        this.audioOutputService = null;\n        this.audioConfig = null;\n        // Configuration data from WebSocket initialization events\n        this.userData = null;\n        this.agents = [];\n        this.avatars = [];\n        this.voices = [];\n        this.tools = [];\n        this.initializationState = new Set();\n        this.isInitialized = false;\n        this.config = (0,_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.mergeConfig)(config);\n        this.authToken = config.authToken || null;\n        // Backward compatibility: support legacy sessionId config parameter\n        this.uiSessionId = config.uiSessionId || config.sessionId || null;\n        // Initialize auth manager if provided\n        if (config.authManager) {\n            this.authManager = config.authManager;\n            // Subscribe to token refresh events\n            this.authManager.on('auth:tokens-refreshed', (tokens)=>{\n                this.authToken = tokens.agentCToken;\n                // If connected, reconnect with new token\n                if (this.isConnected()) {\n                    this.disconnect();\n                    this.connect();\n                }\n            });\n            // Get initial token if available\n            const tokens = this.authManager.getTokens();\n            if (tokens) {\n                this.authToken = tokens.agentCToken;\n            }\n            // Note: Voice and avatar data will come from WebSocket initialization events\n            this.avatarManager = new _avatar__WEBPACK_IMPORTED_MODULE_9__.AvatarManager({\n                availableAvatars: []\n            });\n        }\n        // Initialize voice manager if not already created\n        if (!this.voiceManager) {\n            this.voiceManager = new _voice__WEBPACK_IMPORTED_MODULE_8__.VoiceManager({\n                enableLogging: this.config.debug\n            });\n            this.setupVoiceManagerHandlers();\n        }\n        // Initialize reconnection manager - cast is safe because mergeConfig ensures it's defined\n        this.reconnectionManager = new _ReconnectionManager__WEBPACK_IMPORTED_MODULE_4__.ReconnectionManager(this.config.reconnection);\n        // Subscribe to reconnection events\n        this.reconnectionManager.on('reconnecting', (param)=>{\n            let { attempt, delay } = param;\n            this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.RECONNECTING);\n            this.emit('reconnecting', {\n                attempt,\n                delay\n            });\n        });\n        this.reconnectionManager.on('reconnected', ()=>{\n            this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.CONNECTED);\n            this.emit('reconnected', undefined);\n        });\n        this.reconnectionManager.on('reconnection_failed', (param)=>{\n            let { reason } = param;\n            this.setConnectionState(_ClientConfig__WEBPACK_IMPORTED_MODULE_2__.ConnectionState.DISCONNECTED);\n            this.emit('disconnected', {\n                code: 1006,\n                reason\n            });\n        });\n        // Initialize turn manager if enabled\n        if (this.config.enableTurnManager) {\n            this.turnManager = new _session__WEBPACK_IMPORTED_MODULE_6__.TurnManager(this);\n        }\n        // Initialize session manager\n        this.sessionManager = new _session__WEBPACK_IMPORTED_MODULE_6__.ChatSessionManager({\n            maxSessions: 50,\n            persistSessions: false\n        });\n        // Initialize event stream processor with session manager\n        this.eventStreamProcessor = new _events_EventStreamProcessor__WEBPACK_IMPORTED_MODULE_1__.EventStreamProcessor(this.sessionManager);\n        // Initialize FileUploadManager\n        this.fileUploadManager = new _FileUploadManager__WEBPACK_IMPORTED_MODULE_5__.FileUploadManager(this.config.apiUrl, this.authToken || undefined, this.uiSessionId || undefined, {\n            maxUploadSize: this.config.maxUploadSize,\n            allowedMimeTypes: this.config.allowedMimeTypes,\n            maxFilesPerMessage: this.config.maxFilesPerMessage\n        });\n        // Setup session manager handlers for fetching sessions\n        this.setupSessionFetchingHandlers();\n        // Initialize audio system if enabled\n        if (this.config.enableAudio && this.config.audioConfig) {\n            this.audioConfig = this.config.audioConfig;\n            this.initializeAudioSystem();\n        }\n        // Setup initialization event handlers\n        this.setupInitializationHandlers();\n    }\n} //# sourceMappingURL=RealtimeClient.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../core/dist/client/RealtimeClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../core/dist/session/SessionManager.js":
/*!**********************************************!*\
  !*** ../core/dist/session/SessionManager.js ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatSessionManager: () => (/* binding */ ChatSessionManager)\n/* harmony export */ });\n/* harmony import */ var _events_EventEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/EventEmitter */ \"(app-pages-browser)/../core/dist/events/EventEmitter.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/logger */ \"(app-pages-browser)/../core/dist/utils/logger.js\");\n/**\n * Chat Session Manager for Agent C Realtime SDK\n * Manages multiple chat sessions, tracks current chat session, and handles message history\n */ \n\n/**\n * Manages chat sessions including history, current chat session tracking, and message accumulation\n */ class ChatSessionManager extends _events_EventEmitter__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    /**\n     * Set the current active chat session from server\n     * @param session - ChatSession object from server\n     * @emits chat-session-changed event\n     */ setCurrentSession(session) {\n        if (!session || !session.session_id) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error('[ChatSessionManager] Invalid session provided to setCurrentSession');\n            throw new Error('Invalid session: session must have a session_id');\n        }\n        const previousSession = this.getCurrentSession();\n        // Update or add the session\n        this.sessions.set(session.session_id, session);\n        this.currentSessionId = session.session_id;\n        // Check if we're at max capacity\n        if (this.sessions.size > this.config.maxSessions) {\n            this.pruneOldestSession();\n        }\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Current chat session set to: \".concat(session.session_id), {\n            sessionName: session.session_name,\n            messageCount: session.messages.length,\n            tokenCount: session.token_count\n        });\n        // Always emit chat-session-changed event\n        // The server is the source of truth - if it sent us a chat_session_changed event,\n        // we must treat it as a session change even if the session ID matches.\n        // This handles cases like:\n        // - Client reconnection during an active interaction\n        // - Server-side message history revision\n        // - Any scenario where session content changes without ID change\n        this.emit('chat-session-changed', {\n            previousChatSession: previousSession,\n            currentChatSession: session\n        });\n        this.emit('sessions-updated', {\n            sessions: this.sessions\n        });\n    }\n    /**\n     * Get the current active chat session\n     * @returns Current ChatSession or null if no chat session is active\n     */ getCurrentSession() {\n        if (!this.currentSessionId) {\n            return null;\n        }\n        return this.sessions.get(this.currentSessionId) || null;\n    }\n    /**\n     * Get the current chat session ID\n     * @returns Current chat session ID or null\n     */ getCurrentSessionId() {\n        return this.currentSessionId;\n    }\n    /**\n     * Get a specific session by ID\n     * @param sessionId - ID of the session to retrieve\n     * @returns ChatSession or null if not found\n     */ getSession(sessionId) {\n        return this.sessions.get(sessionId) || null;\n    }\n    /**\n     * Get all sessions\n     * @returns Map of all sessions\n     */ getAllSessions() {\n        return new Map(this.sessions);\n    }\n    /**\n     * Get all session IDs\n     * @returns Array of session IDs\n     */ getSessionIds() {\n        return Array.from(this.sessions.keys());\n    }\n    /**\n     * Add a user message to the current session\n     * @param content - Message content from the user\n     * @returns The created message or null if no current session\n     * @emits message-added event\n     */ addUserMessage(content) {\n        const session = this.getCurrentSession();\n        if (!session) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.warn('[ChatSessionManager] Cannot add user message: no current chat session');\n            return null;\n        }\n        const message = {\n            role: 'user',\n            content,\n            timestamp: new Date().toISOString(),\n            format: 'text'\n        };\n        session.messages.push(message);\n        // Update token count (rough estimate: ~4 chars per token)\n        session.token_count += Math.ceil(content.length / 4);\n        session.updated_at = new Date().toISOString();\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.debug(\"[ChatSessionManager] User message added to session \".concat(session.session_id), {\n            contentLength: content.length,\n            totalMessages: session.messages.length\n        });\n        this.emit('message-added', {\n            sessionId: session.session_id,\n            message\n        });\n        return message;\n    }\n    /**\n     * Handle text delta from assistant (accumulate text)\n     * @deprecated Use EventStreamProcessor for delta handling. This method is no longer called by RealtimeClient.\n     * @param delta - Text chunk to accumulate\n     */ handleTextDelta(delta) {\n        if (!delta) {\n            return;\n        }\n        if (!this.getCurrentSession()) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.warn('[ChatSessionManager] Received text delta but no current chat session');\n            return;\n        }\n        this.isAccumulating = true;\n        this.textAccumulator += delta;\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.debug(\"[ChatSessionManager] Text delta accumulated\", {\n            deltaLength: delta.length,\n            totalAccumulated: this.textAccumulator.length\n        });\n    }\n    /**\n     * Finalize assistant message from accumulated text\n     * @deprecated Use EventStreamProcessor for message finalization. This method is no longer called by RealtimeClient.\n     * @returns The created message or null if no accumulation or session\n     * @emits message-added event\n     */ handleTextDone() {\n        if (!this.isAccumulating || !this.textAccumulator) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.debug('[ChatSessionManager] handleTextDone called but nothing to finalize');\n            return null;\n        }\n        const session = this.getCurrentSession();\n        if (!session) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.warn('[ChatSessionManager] Cannot finalize assistant message: no current chat session');\n            this.resetAccumulator();\n            return null;\n        }\n        const message = {\n            role: 'assistant',\n            content: this.textAccumulator,\n            timestamp: new Date().toISOString(),\n            format: 'text'\n        };\n        session.messages.push(message);\n        // Update token count\n        session.token_count += Math.ceil(this.textAccumulator.length / 4);\n        session.updated_at = new Date().toISOString();\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Assistant message finalized in session \".concat(session.session_id), {\n            contentLength: this.textAccumulator.length,\n            totalMessages: session.messages.length,\n            tokenCount: session.token_count\n        });\n        this.emit('message-added', {\n            sessionId: session.session_id,\n            message\n        });\n        // Reset accumulator\n        const finalMessage = message;\n        this.resetAccumulator();\n        return finalMessage;\n    }\n    /**\n     * Clear the text accumulator\n     */ resetAccumulator() {\n        this.textAccumulator = '';\n        this.isAccumulating = false;\n    }\n    /**\n     * Get the current accumulated text\n     * @deprecated EventStreamProcessor now handles text accumulation\n     * @returns Current accumulated text\n     */ getAccumulatedText() {\n        return this.textAccumulator;\n    }\n    /**\n     * Check if currently accumulating text\n     * @deprecated EventStreamProcessor now handles text accumulation\n     * @returns True if accumulating\n     */ isAccumulatingText() {\n        return this.isAccumulating;\n    }\n    /**\n     * Clear a specific session\n     * @param sessionId - ID of the session to clear\n     * @returns True if session was cleared, false if not found\n     * @emits session-cleared event\n     */ clearSession(sessionId) {\n        const session = this.sessions.get(sessionId);\n        if (!session) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.warn(\"[ChatSessionManager] Cannot clear chat session: \".concat(sessionId, \" not found\"));\n            return false;\n        }\n        // If clearing current session, reset current session ID\n        if (this.currentSessionId === sessionId) {\n            this.currentSessionId = null;\n            this.resetAccumulator();\n        }\n        this.sessions.delete(sessionId);\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Chat session cleared: \".concat(sessionId));\n        this.emit('session-cleared', {\n            sessionId\n        });\n        this.emit('sessions-updated', {\n            sessions: this.sessions\n        });\n        return true;\n    }\n    /**\n     * Clear all sessions and reset state\n     * @emits all-sessions-cleared event\n     */ reset() {\n        const sessionCount = this.sessions.size;\n        this.sessions.clear();\n        this.currentSessionId = null;\n        this.resetAccumulator();\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] All chat sessions cleared (\".concat(sessionCount, \" sessions removed)\"));\n        this.emit('all-sessions-cleared', undefined);\n        this.emit('sessions-updated', {\n            sessions: this.sessions\n        });\n    }\n    /**\n     * Update session metadata\n     * @param sessionId - Session ID to update\n     * @param metadata - Metadata to merge with existing metadata\n     * @returns True if updated, false if session not found\n     */ updateSessionMetadata(sessionId, metadata) {\n        const session = this.sessions.get(sessionId);\n        if (!session) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.warn(\"[ChatSessionManager] Cannot update metadata: chat session \".concat(sessionId, \" not found\"));\n            return false;\n        }\n        session.metadata = {\n            ...session.metadata,\n            ...metadata\n        };\n        session.updated_at = new Date().toISOString();\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.debug(\"[ChatSessionManager] Chat session metadata updated for \".concat(sessionId), metadata);\n        this.emit('sessions-updated', {\n            sessions: this.sessions\n        });\n        return true;\n    }\n    /**\n     * Update session name\n     * @param sessionId - Session ID to update\n     * @param name - New session name\n     * @returns True if updated, false if session not found\n     */ updateSessionName(sessionId, name) {\n        const session = this.sessions.get(sessionId);\n        if (!session) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.warn(\"[ChatSessionManager] Cannot update name: chat session \".concat(sessionId, \" not found\"));\n            return false;\n        }\n        session.session_name = name;\n        session.updated_at = new Date().toISOString();\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Chat session name updated for \".concat(sessionId, \": \").concat(name));\n        this.emit('sessions-updated', {\n            sessions: this.sessions\n        });\n        return true;\n    }\n    /**\n     * Prune the oldest session when at max capacity\n     */ pruneOldestSession() {\n        if (this.sessions.size === 0) return;\n        let oldestSessionId = null;\n        let oldestTime = null;\n        // Find the oldest session (excluding current)\n        for (const [id, session] of this.sessions){\n            if (id === this.currentSessionId) continue;\n            const sessionTime = new Date(session.updated_at || session.created_at || 0);\n            if (!oldestTime || sessionTime < oldestTime) {\n                oldestTime = sessionTime;\n                oldestSessionId = id;\n            }\n        }\n        if (oldestSessionId) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Pruning oldest chat session: \".concat(oldestSessionId));\n            this.clearSession(oldestSessionId);\n        }\n    }\n    /**\n     * Set the session index from a paginated query response\n     * Used when receiving initial sessions from login or when fetching additional sessions\n     * @param response - ChatSessionQueryResponse from server\n     * @param append - Whether to append to existing index or replace it\n     */ setSessionIndex(response) {\n        let append = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (!response) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error('[ChatSessionManager] Invalid session query response provided to setSessionIndex');\n            return;\n        }\n        if (append) {\n            // Append new sessions to existing index, avoiding duplicates\n            const existingIds = new Set(this.sessionIndex.map((s)=>s.session_id));\n            const newSessions = response.chat_sessions.filter((s)=>!existingIds.has(s.session_id));\n            this.sessionIndex = [\n                ...this.sessionIndex,\n                ...newSessions\n            ];\n        } else {\n            // Replace the entire index\n            this.sessionIndex = response.chat_sessions || [];\n        }\n        this.totalSessionCount = response.total_sessions;\n        this.lastFetchOffset = response.offset;\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Session index updated\", {\n            sessionCount: this.sessionIndex.length,\n            totalSessions: this.totalSessionCount,\n            offset: this.lastFetchOffset,\n            appended: append\n        });\n        this.emit('sessions-index-updated', {\n            sessionIndex: this.sessionIndex,\n            totalSessions: this.totalSessionCount\n        });\n    }\n    /**\n     * Get the current session index\n     * @returns Array of ChatSessionIndexEntry\n     */ getSessionIndex() {\n        return [\n            ...this.sessionIndex\n        ];\n    }\n    /**\n     * Get total number of sessions available on the server\n     * @returns Total session count from last query\n     */ getTotalSessionCount() {\n        return this.totalSessionCount;\n    }\n    /**\n     * Check if there are more sessions to fetch\n     * @returns True if there are unfetched sessions\n     */ hasMoreSessions() {\n        return this.sessionIndex.length < this.totalSessionCount;\n    }\n    /**\n     * Request more sessions from the server\n     * Emits an event that should be handled by RealtimeClient to send the request\n     * @param limit - Number of sessions to fetch (default 50)\n     */ requestMoreSessions() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 50;\n        const offset = this.sessionIndex.length;\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info(\"[ChatSessionManager] Requesting more sessions\", {\n            offset,\n            limit,\n            currentCount: this.sessionIndex.length,\n            totalAvailable: this.totalSessionCount\n        });\n        this.emit('request-user-sessions', {\n            offset,\n            limit\n        });\n    }\n    /**\n     * Get session statistics\n     * @returns Statistics about current sessions\n     */ getStatistics() {\n        let totalMessages = 0;\n        let totalTokens = 0;\n        for (const session of this.sessions.values()){\n            totalMessages += session.messages.length;\n            totalTokens += session.token_count;\n        }\n        return {\n            totalSessions: this.sessions.size,\n            totalMessages,\n            totalTokens,\n            currentSessionId: this.currentSessionId,\n            hasActiveAccumulation: this.isAccumulating,\n            sessionIndexCount: this.sessionIndex.length,\n            totalSessionsAvailable: this.totalSessionCount\n        };\n    }\n    /**\n     * Clean up resources\n     */ cleanup() {\n        this.reset();\n        this.sessionIndex = [];\n        this.totalSessionCount = 0;\n        this.lastFetchOffset = 0;\n        this.removeAllListeners();\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info('[ChatSessionManager] ChatSessionManager cleaned up');\n    }\n    /**\n     * Destroy the session manager\n     * Alias for cleanup for consistency\n     */ destroy() {\n        this.cleanup();\n    }\n    // ============================================================================\n    // Tool Call Buffering Methods (Phase 3)\n    // ============================================================================\n    /**\n     * Buffer tool calls for a session (when no previous message to attach to)\n     * @param sessionId - Session ID\n     * @param toolCalls - Tool calls to buffer\n     */ bufferPendingToolCalls(sessionId, toolCalls) {\n        var _this_pendingToolCalls_get;\n        const existing = this.pendingToolCalls.get(sessionId) || [];\n        this.pendingToolCalls.set(sessionId, [\n            ...existing,\n            ...toolCalls\n        ]);\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.debug(\"[ChatSessionManager] Buffered \".concat(toolCalls.length, \" tool calls for session\"), {\n            sessionId,\n            totalPending: (_this_pendingToolCalls_get = this.pendingToolCalls.get(sessionId)) === null || _this_pendingToolCalls_get === void 0 ? void 0 : _this_pendingToolCalls_get.length,\n            toolNames: toolCalls.map((tc)=>tc.name)\n        });\n    }\n    /**\n     * Get pending tool calls for a session\n     * @param sessionId - Session ID\n     * @returns Array of buffered tool calls (defensive copy)\n     */ getPendingToolCalls(sessionId) {\n        const pending = this.pendingToolCalls.get(sessionId);\n        return pending ? [\n            ...pending\n        ] : [];\n    }\n    /**\n     * Clear pending tool calls for a session\n     * @param sessionId - Session ID\n     */ clearPendingToolCalls(sessionId) {\n        var _this_pendingToolCalls_get;\n        const count = ((_this_pendingToolCalls_get = this.pendingToolCalls.get(sessionId)) === null || _this_pendingToolCalls_get === void 0 ? void 0 : _this_pendingToolCalls_get.length) || 0;\n        this.pendingToolCalls.delete(sessionId);\n        if (count > 0) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.debug(\"[ChatSessionManager] Cleared \".concat(count, \" pending tool calls for session\"), {\n                sessionId\n            });\n        }\n    }\n    /**\n     * Check if session has pending tool calls\n     * @param sessionId - Session ID\n     * @returns True if session has buffered tool calls\n     */ hasPendingToolCalls(sessionId) {\n        const pending = this.pendingToolCalls.get(sessionId);\n        return pending !== undefined && pending.length > 0;\n    }\n    /**\n     * Create a new ChatSessionManager instance\n     * @param config - Optional configuration for the chat session manager\n     */ constructor(config = {}){\n        super();\n        this.pendingToolCalls = new Map();\n        this.sessions = new Map();\n        this.currentSessionId = null;\n        this.textAccumulator = '';\n        this.isAccumulating = false;\n        this.sessionIndex = [];\n        this.totalSessionCount = 0;\n        this.lastFetchOffset = 0;\n        this.config = {\n            maxSessions: config.maxSessions || 100,\n            persistSessions: config.persistSessions || false,\n            defaultSessionName: config.defaultSessionName || 'Chat Session'\n        };\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.info('[ChatSessionManager] ChatSessionManager initialized', this.config);\n    }\n} //# sourceMappingURL=SessionManager.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../core/dist/session/SessionManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../ui/dist/components/chat/Message.js":
/*!*********************************************!*\
  !*** ../ui/dist/components/chat/Message.js ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\"use strict\";\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function() {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function(o) {\n            var ar = [];\n            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function(mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) {\n            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        }\n        __setModuleDefault(result, mod);\n        return result;\n    };\n}();\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Message = void 0;\nvar jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\"));\nvar utils_1 = __webpack_require__(/*! ../../lib/utils */ \"(app-pages-browser)/../ui/dist/lib/utils.js\");\nvar lucide_react_1 = __webpack_require__(/*! lucide-react */ \"(app-pages-browser)/../../node_modules/.pnpm/lucide-react@0.330.0_react@18.3.1/node_modules/lucide-react/dist/esm/lucide-react.js\");\nvar button_1 = __webpack_require__(/*! ../ui/button */ \"(app-pages-browser)/../ui/dist/components/ui/button.js\");\nvar framer_motion_1 = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/../../node_modules/.pnpm/framer-motion@12.23.15_@emotion+is-prop-valid@1.4.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/cjs/index.js\");\nvar MessageContentRenderer_1 = __webpack_require__(/*! ./MessageContentRenderer */ \"(app-pages-browser)/../ui/dist/components/chat/MessageContentRenderer.js\");\nvar MarkdownRenderer_1 = __webpack_require__(/*! ./content-renderers/MarkdownRenderer */ \"(app-pages-browser)/../ui/dist/components/chat/content-renderers/MarkdownRenderer.js\");\nvar logger_1 = __webpack_require__(/*! ../../utils/logger */ \"(app-pages-browser)/../ui/dist/utils/logger.js\");\n/**\n * Extract text content from MessageContent for display purposes\n */ function extractTextContent(content) {\n    if (content === null) {\n        return '';\n    }\n    if (typeof content === 'string') {\n        return content;\n    }\n    // For array of content parts, extract text parts\n    return content.filter(function(part) {\n        return part.type === 'text';\n    }).map(function(part) {\n        return part.text || '';\n    }).join('\\n');\n}\nvar ThoughtMessage = function(_a) {\n    _s();\n    var message = _a.message, _b = _a.isStreaming, isStreaming = _b === void 0 ? false : _b, _c = _a.showTimestamp, showTimestamp = _c === void 0 ? true : _c, _d = _a.showFooter, showFooter = _d === void 0 ? true : _d;\n    var _e = React.useState(true), isExpanded = _e[0], setIsExpanded = _e[1]; // Default to expanded\n    // Extract first line for preview - handle markdown better\n    var firstLine = React.useMemo({\n        \"ThoughtMessage.useMemo[firstLine]\": function() {\n            var textContent = extractTextContent(message.content);\n            // Find first non-empty line that's not a code fence\n            var lines = textContent.split('\\n').filter({\n                \"ThoughtMessage.useMemo[firstLine].lines\": function(line) {\n                    return line.trim() !== '';\n                }\n            }[\"ThoughtMessage.useMemo[firstLine].lines\"]);\n            var first = '';\n            for(var _i = 0, lines_1 = lines; _i < lines_1.length; _i++){\n                var line = lines_1[_i];\n                // Skip code fence markers\n                if (!line.trim().startsWith('```')) {\n                    first = line.trim();\n                    break;\n                }\n            }\n            if (!first && lines.length > 0) {\n                first = lines[0].trim();\n            }\n            return first.length > 80 ? \"\".concat(first.slice(0, 77), \"...\") : first;\n        }\n    }[\"ThoughtMessage.useMemo[firstLine]\"], [\n        message.content\n    ]);\n    return (0, jsx_runtime_1.jsxs)(\"div\", {\n        className: \"group relative flex gap-3 py-2\",\n        role: \"article\",\n        \"aria-label\": \"Thought process\",\n        children: [\n            (0, jsx_runtime_1.jsx)(\"div\", {\n                className: \"flex-shrink-0\",\n                children: (0, jsx_runtime_1.jsx)(\"div\", {\n                    className: \"h-8 w-8 rounded-full bg-muted/50 flex items-center justify-center\",\n                    children: (0, jsx_runtime_1.jsx)(lucide_react_1.Brain, {\n                        className: \"h-4 w-4 text-muted-foreground\"\n                    })\n                })\n            }),\n            (0, jsx_runtime_1.jsxs)(\"div\", {\n                className: \"flex-1 max-w-full space-y-2 overflow-hidden\",\n                children: [\n                    (0, jsx_runtime_1.jsxs)(\"div\", {\n                        className: (0, utils_1.cn)(\"relative rounded-xl px-4 py-2.5 transition-all duration-200 overflow-hidden\", \"bg-card-thought border border-border/50\", \"max-w-[85%]\", isStreaming && \"after:content-[''] after:inline-block after:w-1.5 after:h-4 after:ml-1 after:bg-current after:animate-pulse after:rounded-full\"),\n                        children: [\n                            (0, jsx_runtime_1.jsxs)(\"button\", {\n                                className: (0, utils_1.cn)(\"flex w-full items-center justify-between gap-2 mb-2\", \"text-muted-foreground hover:text-foreground\", \"transition-colors duration-200 cursor-pointer\", \"focus-visible:outline-none focus-visible:ring-1\", \"focus-visible:ring-ring rounded\", \"-mx-1 px-1 py-1\" // Expand clickable area slightly\n                                ),\n                                onClick: function() {\n                                    return setIsExpanded(!isExpanded);\n                                },\n                                \"aria-expanded\": isExpanded,\n                                \"aria-label\": isExpanded ? \"Collapse thought\" : \"Expand thought\",\n                                children: [\n                                    (0, jsx_runtime_1.jsx)(\"span\", {\n                                        className: \"text-xs font-medium truncate\",\n                                        children: isExpanded ? \"\" : firstLine\n                                    }),\n                                    (0, jsx_runtime_1.jsxs)(\"div\", {\n                                        className: \"flex items-center gap-1.5 shrink-0\",\n                                        children: [\n                                            isStreaming && (0, jsx_runtime_1.jsx)(lucide_react_1.Loader2, {\n                                                className: \"h-3 w-3 animate-spin text-muted-foreground/70\"\n                                            }),\n                                            (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronRight, {\n                                                className: (0, utils_1.cn)(\"h-3.5 w-3.5 transition-transform duration-200\", isExpanded && \"rotate-90\")\n                                            })\n                                        ]\n                                    })\n                                ]\n                            }),\n                            (0, jsx_runtime_1.jsx)(framer_motion_1.AnimatePresence, {\n                                children: isExpanded && (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {\n                                    initial: {\n                                        height: 0,\n                                        opacity: 0\n                                    },\n                                    animate: {\n                                        height: \"auto\",\n                                        opacity: 1\n                                    },\n                                    exit: {\n                                        height: 0,\n                                        opacity: 0\n                                    },\n                                    transition: {\n                                        duration: 0.2,\n                                        ease: \"easeOut\"\n                                    },\n                                    className: \"overflow-hidden\",\n                                    children: (0, jsx_runtime_1.jsx)(\"div\", {\n                                        className: \"text-[0.9375rem] leading-6 tracking-tight text-muted-foreground\",\n                                        children: (0, jsx_runtime_1.jsx)(MarkdownRenderer_1.MarkdownRenderer, {\n                                            content: extractTextContent(message.content),\n                                            compact: true,\n                                            className: \"prose-muted\",\n                                            ariaLabel: \"Thought process content\"\n                                        })\n                                    })\n                                })\n                            })\n                        ]\n                    }),\n                    showFooter && !isStreaming && (0, jsx_runtime_1.jsx)(MessageFooter_1.MessageFooter, {\n                        message: message,\n                        showTimestamp: showTimestamp\n                    })\n                ]\n            })\n        ]\n    });\n};\n_s(ThoughtMessage, \"XsKHeZrJ3owaQi9c+9t370bza8c=\");\n_c = ThoughtMessage;\n// Import MessageFooter from separate file\nvar MessageFooter_1 = __webpack_require__(/*! ./MessageFooter */ \"(app-pages-browser)/../ui/dist/components/chat/MessageFooter.js\");\nvar MessageComponent = _s1(React.forwardRef(_c1 = _s1(function(_a, ref) {\n    _s1();\n    var className = _a.className, message = _a.message, _b = _a.showTimestamp, showTimestamp = _b === void 0 ? true : _b, _c = _a.isStreaming, isStreaming = _c === void 0 ? false : _c, _d = _a.isSubSession, isSubSession = _d === void 0 ? false : _d, avatarComponent = _a.avatarComponent, onEdit = _a.onEdit, _e = _a.showFooter, showFooter = _e === void 0 ? true : _e, props = __rest(_a, [\n        \"className\",\n        \"message\",\n        \"showTimestamp\",\n        \"isStreaming\",\n        \"isSubSession\",\n        \"avatarComponent\",\n        \"onEdit\",\n        \"showFooter\"\n    ]);\n    var _f = React.useState(false), isEditing = _f[0], setIsEditing = _f[1];\n    var _g = React.useState(extractTextContent(message.content) || ''), editContent = _g[0], setEditContent = _g[1];\n    // Check if message has attachments (images)\n    var hasAttachments = React.useMemo({\n        \"MessageComponent.useMemo[hasAttachments]\": function() {\n            return Array.isArray(message.content) && message.content.some({\n                \"MessageComponent.useMemo[hasAttachments]\": function(block) {\n                    return typeof block === 'object' && block !== null && 'type' in block && block.type === 'image';\n                }\n            }[\"MessageComponent.useMemo[hasAttachments]\"]);\n        }\n    }[\"MessageComponent.useMemo[hasAttachments]\"], [\n        message.content\n    ]);\n    // Debug logging\n    React.useEffect({\n        \"MessageComponent.useEffect\": function() {\n            logger_1.Logger.debug('[Message] Rendering message:', {\n                role: message.role,\n                contentType: typeof message.content,\n                contentLength: Array.isArray(message.content) ? message.content.length : undefined,\n                content: message.content,\n                timestamp: message.timestamp,\n                isThought: message.isThought,\n                hasAttachments: hasAttachments\n            });\n        }\n    }[\"MessageComponent.useEffect\"], [\n        message,\n        hasAttachments\n    ]);\n    // Check for thought messages\n    if (message.isThought || message.role === 'assistant (thought)') {\n        return (0, jsx_runtime_1.jsx)(ThoughtMessage, {\n            message: message,\n            isStreaming: isStreaming,\n            showTimestamp: showTimestamp,\n            showFooter: showFooter\n        });\n    }\n    var isUser = message.role === 'user';\n    var isAssistant = message.role === 'assistant';\n    var isError = message.status === 'error';\n    // Avatar component\n    var Avatar = function() {\n        if (avatarComponent) return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {\n            children: avatarComponent\n        });\n        if (isUser) {\n            return (0, jsx_runtime_1.jsx)(\"div\", {\n                className: \"h-8 w-8 rounded-full bg-primary flex items-center justify-center\",\n                children: (0, jsx_runtime_1.jsx)(lucide_react_1.User, {\n                    className: \"h-4 w-4 text-primary-foreground\"\n                })\n            });\n        }\n        return (0, jsx_runtime_1.jsx)(\"div\", {\n            className: \"h-8 w-8 rounded-full bg-primary/10 flex items-center justify-center\",\n            children: (0, jsx_runtime_1.jsx)(lucide_react_1.Bot, {\n                className: \"h-4 w-4 text-primary\"\n            })\n        });\n    };\n    // Render content\n    var renderContent = function() {\n        if (isUser && isEditing) {\n            // Edit mode for user messages - only text editing is supported\n            return (0, jsx_runtime_1.jsx)(\"div\", {\n                className: \"whitespace-pre-wrap break-words\",\n                children: (0, jsx_runtime_1.jsx)(\"textarea\", {\n                    value: editContent,\n                    onChange: function(e) {\n                        return setEditContent(e.target.value);\n                    },\n                    onKeyDown: function(e) {\n                        if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n                            e.preventDefault();\n                            if (onEdit && message.id) {\n                                onEdit(message.id, editContent);\n                                setIsEditing(false);\n                            }\n                        } else if (e.key === 'Escape') {\n                            e.preventDefault();\n                            setEditContent(extractTextContent(message.content) || '');\n                            setIsEditing(false);\n                        }\n                    },\n                    className: \"w-full bg-transparent border-none outline-none resize-none min-h-[80px]\",\n                    autoFocus: true\n                })\n            });\n        }\n        // Use the new MessageContentRenderer for all message content\n        return (0, jsx_runtime_1.jsx)(MessageContentRenderer_1.MessageContentRenderer, {\n            content: message.content,\n            role: message.role\n        });\n    };\n    return (0, jsx_runtime_1.jsxs)(\"div\", __assign({\n        ref: ref,\n        className: (0, utils_1.cn)(\"group relative flex gap-3 py-2\", isUser && \"flex-row-reverse\", className),\n        role: \"article\",\n        \"aria-label\": \"Message from \".concat(isUser ? 'user' : 'assistant')\n    }, props, {\n        children: [\n            (0, jsx_runtime_1.jsx)(\"div\", {\n                className: \"flex-shrink-0\",\n                children: (0, jsx_runtime_1.jsx)(Avatar, {})\n            }),\n            (0, jsx_runtime_1.jsxs)(\"div\", {\n                className: (0, utils_1.cn)(\"flex-1 max-w-full space-y-2 overflow-hidden\", isUser && \"flex flex-col items-end\"),\n                children: [\n                    (0, jsx_runtime_1.jsxs)(\"div\", {\n                        className: (0, utils_1.cn)(\"relative rounded-xl px-4 py-2.5 transition-all duration-200 overflow-hidden\", isUser ? \"bg-card-user max-w-[85%]\" : \"bg-card-assistant border border-border/50\", isError && \"bg-destructive/10 border border-destructive\", isStreaming && \"after:content-[''] after:inline-block after:w-1.5 after:h-4 after:ml-1 after:bg-current after:animate-pulse after:rounded-full\", isSubSession && \"border-l-2 border-primary/30\", hasAttachments && \"ring-1 ring-primary/20 ring-inset\"),\n                        children: [\n                            isError && message.error && (0, jsx_runtime_1.jsxs)(\"div\", {\n                                className: \"flex items-start gap-2 mb-2 text-destructive\",\n                                children: [\n                                    (0, jsx_runtime_1.jsx)(lucide_react_1.AlertCircle, {\n                                        className: \"h-4 w-4 mt-0.5 flex-shrink-0\"\n                                    }),\n                                    (0, jsx_runtime_1.jsx)(\"span\", {\n                                        className: \"text-sm\",\n                                        children: message.error\n                                    })\n                                ]\n                            }),\n                            (0, jsx_runtime_1.jsx)(\"div\", {\n                                className: \"text-[0.9375rem] leading-6 tracking-tight\",\n                                children: renderContent()\n                            }),\n                            isEditing && isUser && (0, jsx_runtime_1.jsxs)(\"div\", {\n                                className: \"flex items-center gap-2 mt-2\",\n                                children: [\n                                    (0, jsx_runtime_1.jsx)(button_1.Button, {\n                                        size: \"sm\",\n                                        onClick: function() {\n                                            if (onEdit && message.id) {\n                                                onEdit(message.id, editContent);\n                                                setIsEditing(false);\n                                            }\n                                        },\n                                        disabled: !editContent.trim(),\n                                        children: \"Save\"\n                                    }),\n                                    (0, jsx_runtime_1.jsx)(button_1.Button, {\n                                        size: \"sm\",\n                                        variant: \"ghost\",\n                                        onClick: function() {\n                                            setEditContent(extractTextContent(message.content) || '');\n                                            setIsEditing(false);\n                                        },\n                                        children: \"Cancel\"\n                                    }),\n                                    (0, jsx_runtime_1.jsx)(\"span\", {\n                                        className: \"ml-auto text-xs text-muted-foreground\",\n                                        children: \"\\u2318+Enter to save, Esc to cancel\"\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    isAssistant && showFooter && !isStreaming && (0, jsx_runtime_1.jsx)(MessageFooter_1.MessageFooter, {\n                        message: message,\n                        showTimestamp: showTimestamp\n                    }),\n                    isUser && showFooter && !isStreaming && !isEditing && (0, jsx_runtime_1.jsx)(MessageFooter_1.MessageFooter, {\n                        message: message,\n                        onEdit: function() {\n                            return setIsEditing(true);\n                        },\n                        showTimestamp: showTimestamp\n                    }),\n                    (message.status === 'sending' || message.status === 'sent') && (0, jsx_runtime_1.jsxs)(\"div\", {\n                        className: \"flex items-center gap-2 px-1\",\n                        children: [\n                            message.status === 'sending' && (0, jsx_runtime_1.jsx)(\"span\", {\n                                className: \"text-xs text-muted-foreground\",\n                                children: \"Sending...\"\n                            }),\n                            message.status === 'sent' && !isError && (0, jsx_runtime_1.jsx)(lucide_react_1.Check, {\n                                className: \"h-3 w-3 text-muted-foreground\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    }));\n}, \"LI1u9nQuEXpENbXjJhNle08o5Xk=\")), \"LI1u9nQuEXpENbXjJhNle08o5Xk=\");\n_c2 = MessageComponent;\nMessageComponent.displayName = 'Message';\n// Memoize the Message component to prevent unnecessary re-renders\nvar Message = React.memo(MessageComponent, function(prevProps, nextProps) {\n    var _a, _b, _c, _d;\n    // Custom comparison to prevent re-renders when not needed\n    if (prevProps.message.id !== nextProps.message.id) return false;\n    if (prevProps.message.content !== nextProps.message.content) return false;\n    if (prevProps.isStreaming !== nextProps.isStreaming) return false;\n    if (prevProps.isSubSession !== nextProps.isSubSession) return false;\n    if (prevProps.showTimestamp !== nextProps.showTimestamp) return false;\n    if (prevProps.showFooter !== nextProps.showFooter) return false;\n    if (((_a = prevProps.message.toolCalls) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = nextProps.message.toolCalls) === null || _b === void 0 ? void 0 : _b.length)) return false;\n    if (((_c = prevProps.message.toolResults) === null || _c === void 0 ? void 0 : _c.length) !== ((_d = nextProps.message.toolResults) === null || _d === void 0 ? void 0 : _d.length)) return false;\n    // Props are equal, skip re-render\n    return true;\n});\n_c3 = Message;\nexports.Message = Message; //# sourceMappingURL=Message.js.map\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"ThoughtMessage\");\n$RefreshReg$(_c1, \"MessageComponent$React.forwardRef\");\n$RefreshReg$(_c2, \"MessageComponent\");\n$RefreshReg$(_c3, \"Message\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi91aS9kaXN0L2NvbXBvbmVudHMvY2hhdC9NZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLGtOQUE4QjtBQUM5Qix3R0FBb0M7QUFDcEMsa01BR3FCO0FBQ3JCLGlIQUFxQztBQUNyQyw0UEFBdUQ7QUFFdkQsK0pBQWlFO0FBQ2pFLGlMQUF1RTtBQUN2RSwrR0FBMkM7QUFnQzNDOztHQUVHLENBQ0gsU0FBUyxrQkFBa0IsQ0FBQyxPQUF1QjtJQUNqRCxJQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUNyQixPQUFPLEVBQUU7SUFDWCxDQUFDO0lBRUQsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUUsQ0FBQztRQUNoQyxPQUFPLE9BQU87SUFDaEIsQ0FBQztJQUVELGlEQUFpRDtJQUNqRCxPQUFPLE9BQU8sQ0FDWCxNQUFNLENBQUMsU0FBQyxJQUFJO1FBQTBCLFdBQUksQ0FBQyxJQUFJLEtBQUssTUFBTTtJQUFwQixDQUFvQixDQUFDLENBQzNELEdBQUcsQ0FBQyxTQUFDLElBQVM7UUFBSyxXQUFJLENBQUMsSUFBSSxJQUFJLEVBQUU7SUFBZixDQUFlLENBQUMsQ0FDbkMsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNmLENBQUM7QUEyQ0QscUJBQXNELFNBQUMsRUFLdEQ7O1FBSkMsT0FBTyxlQUNQLG1CQUFtQixFQUFuQixXQUFXLG1CQUFHLEtBQUssT0FDbkIscUJBQW9CLEVBQXBCLGFBQWEsbUJBQUcsSUFBSSxPQUNwQixrQkFBaUIsRUFBakIsVUFBVSxtQkFBRyxJQUFJO0lBRVgsU0FBOEIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBakQsVUFBVSxVQUFFLGFBQWEsUUFBd0IsRUFBQyxzQkFBc0I7SUFFL0UsMERBQTBEO0lBQzFELElBQU0sU0FBUyxHQUFHLEtBQUss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QUFNLFNBQVMsRUFBQywrQkFBK0I7Z0NBQUE7NEJBQUEsRUFFeEMsQ0FDUjs0QkFDQSxPQUFPLENBQUMsTUFBTSxLQUFLLE1BQU0sSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUN4QyxzQkFBQyxvQkFBSztnQ0FBQyxTQUFTLEVBQUMsK0JBQStCOzRCQUFBLEVBQUc7eUJBQ3BEO29CQUFBLEVBQ0c7aUJBQ1A7WUFBQSxFQUNHO1NBQUE7SUFBQSxHQUNGLENBQ1A7QUFDSCxDQUFDLENBQ0Y7O0FBRUQsZ0JBQWdCLENBQUMsV0FBVyxHQUFHLFNBQVM7QUFFeEMsa0VBQWtFO0FBQ2xFLElBQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsU0FBQyxTQUFTLEVBQUUsU0FBUzs7SUFDaEUsMERBQTBEO0lBQzFELElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsT0FBTyxLQUFLLENBQUM7SUFDaEUsSUFBSSxTQUFTLENBQUMsT0FBTyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLEtBQUssQ0FBQztJQUMxRSxJQUFJLFNBQVMsQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLFdBQVcsRUFBRSxPQUFPLEtBQUssQ0FBQztJQUNsRSxJQUFJLFNBQVMsQ0FBQyxZQUFZLEtBQUssU0FBUyxDQUFDLFlBQVksRUFBRSxPQUFPLEtBQUssQ0FBQztJQUNwRSxJQUFJLFNBQVMsQ0FBQyxhQUFhLEtBQUssU0FBUyxDQUFDLGFBQWEsRUFBRSxPQUFPLEtBQUssQ0FBQztJQUN0RSxJQUFJLFNBQVMsQ0FBQyxVQUFVLEtBQUssU0FBUyxDQUFDLFVBQVUsRUFBRSxPQUFPLEtBQUssQ0FBQztJQUNoRSxJQUFJLGdCQUFTLENBQUMsT0FBTyxDQUFDLGVBQVMsb0NBQUUsWUFBVyxnQkFBUyxDQUFDLE9BQU8sQ0FBQyxlQUFTLG9DQUFFLE9BQU0sRUFBRSxPQUFPLEtBQUssQ0FBQztJQUM5RixJQUFJLGdCQUFTLENBQUMsT0FBTyxDQUFDLGlCQUFXLG9DQUFFLGFBQVcsZUFBUyxDQUFDLE9BQU8sQ0FBQyxpQkFBVyxvQ0FBRSxNQUFNLEdBQUUsT0FBTyxLQUFLLENBQUM7SUFFbEcsa0NBQWtDO0lBQ2xDLE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyxDQUFDLENBQUM7O0FBRU0sMEJBQU8iLCJzb3VyY2VzIjpbIi9Vc2Vycy9FYm9vdGgvYWdlbnRfY19mcmFtZXdvcmsvc3JjL3NyYy9jb21wb25lbnRzL2NoYXQvTWVzc2FnZS50c3giXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../ui/dist/components/chat/Message.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../ui/dist/styles/syntax-highlighting.css":
/*!*************************************************!*\
  !*** ../ui/dist/styles/syntax-highlighting.css ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"ae0fffdb598b\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi91aS9kaXN0L3N0eWxlcy9zeW50YXgtaGlnaGxpZ2h0aW5nLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FYm9vdGgvYWdlbnRfY19mcmFtZXdvcmsvc3JjL3JlYWx0aW1lX2NsaWVudC9wYWNrYWdlcy91aS9kaXN0L3N0eWxlcy9zeW50YXgtaGlnaGxpZ2h0aW5nLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImFlMGZmZmRiNTk4YlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/../ui/dist/styles/syntax-highlighting.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"5fc9136e7676\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyIvVXNlcnMvRWJvb3RoL2FnZW50X2NfZnJhbWV3b3JrL3NyYy9yZWFsdGltZV9jbGllbnQvcGFja2FnZXMvZGVtby9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNWZjOTEzNmU3Njc2XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/styles/globals.css\n"));

/***/ })

});