"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-toc@7.1.0";
exports.ids = ["vendor-chunks/mdast-util-toc@7.1.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/contents.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/contents.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contents: () => (/* binding */ contents)\n/* harmony export */ });\n/* harmony import */ var _ungap_structured_clone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ungap/structured-clone */ \"(ssr)/../../node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/index.js\");\n/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('./search.js').SearchEntry} SearchEntry\n */\n\n/**\n * @typedef ContentsOptions\n *   Build configuration.\n * @property {boolean | null | undefined} [tight=false]\n *   Whether to compile list items tightly (default: `false`).\n * @property {boolean | null | undefined} [ordered=false]\n *   Whether to compile list items as an ordered list, otherwise they are\n *   unordered (default: `false`).\n * @property {string | null | undefined} [prefix=undefined]\n *   Add a prefix to links to headings in the table of contents (default:\n *   `undefined`).\n *\n *   Useful for example when later going from mdast to hast and sanitizing with\n *   `hast-util-sanitize`.\n */\n\n\n\n/**\n * Transform a list of heading objects to a markdown list.\n *\n * @param {Array<SearchEntry>} map\n * @param {ContentsOptions} settings\n */\nfunction contents(map, settings) {\n  const {ordered = false, tight = false, prefix} = settings\n  /** @type {List} */\n  const table = {type: 'list', ordered, spread: false, children: []}\n  let minDepth = Number.POSITIVE_INFINITY\n  let index = -1\n\n  // Find minimum depth.\n  while (++index < map.length) {\n    if (map[index].depth < minDepth) {\n      minDepth = map[index].depth\n    }\n  }\n\n  // Normalize depth.\n  index = -1\n\n  while (++index < map.length) {\n    map[index].depth -= minDepth - 1\n  }\n\n  // Add TOC to list.\n  index = -1\n\n  while (++index < map.length) {\n    insert(map[index], table, {ordered, tight, prefix})\n  }\n\n  return table\n}\n\n/**\n * Insert an entry into `parent`.\n *\n * @param {SearchEntry} entry\n * @param {List | ListItem} parent\n * @param {ContentsOptions} settings\n */\nfunction insert(entry, parent, settings) {\n  let index = -1\n  const tail = parent.children[parent.children.length - 1]\n\n  if (parent.type === 'list') {\n    if (entry.depth === 1) {\n      parent.children.push({\n        type: 'listItem',\n        spread: false,\n        children: [\n          {\n            type: 'paragraph',\n            children: [\n              {\n                type: 'link',\n                title: null,\n                url: '#' + (settings.prefix || '') + entry.id,\n                children: all(entry.children)\n              }\n            ]\n          }\n        ]\n      })\n    } else if (parent.children.length > 0) {\n      const tail = parent.children[parent.children.length - 1]\n      insert(entry, tail, settings)\n    } else {\n      /** @type {ListItem} */\n      const item = {type: 'listItem', spread: false, children: []}\n      parent.children.push(item)\n      insert(entry, item, settings)\n    }\n  }\n  // List item.\n  else if (tail && tail.type === 'list') {\n    entry.depth--\n    insert(entry, tail, settings)\n  } else {\n    /** @type {List} */\n    const item = {\n      type: 'list',\n      ordered: settings.ordered,\n      spread: false,\n      children: []\n    }\n    parent.children.push(item)\n    entry.depth--\n    insert(entry, item, settings)\n  }\n\n  if (parent.type === 'list' && !settings.tight) {\n    parent.spread = false\n\n    while (++index < parent.children.length) {\n      if (parent.children[index].children.length > 1) {\n        parent.spread = true\n        break\n      }\n    }\n  } else {\n    parent.spread = !settings.tight\n  }\n}\n\n/**\n * @param {Array<PhrasingContent>} nodes\n * @returns {Array<PhrasingContent>}\n */\nfunction all(nodes) {\n  /** @type {Array<PhrasingContent>} */\n  const results = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    const result = one(nodes[index])\n\n    if (Array.isArray(result)) {\n      results.push(...result)\n    } else {\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\n/**\n * @param {PhrasingContent} node\n * @returns {Array<PhrasingContent> | PhrasingContent}\n */\nfunction one(node) {\n  if (node.type === 'footnoteReference') {\n    return []\n  }\n\n  if (node.type === 'link' || node.type === 'linkReference') {\n    return all(node.children)\n  }\n\n  if ('children' in node) {\n    const {children, position, ...copy} = node\n    return Object.assign((0,_ungap_structured_clone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(copy), {\n      children: all(node.children)\n    })\n  }\n\n  const {position, ...copy} = node\n  return (0,_ungap_structured_clone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(copy)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/contents.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/index.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search.js */ \"(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/search.js\");\n/* harmony import */ var _contents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contents.js */ \"(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/contents.js\");\n/* harmony import */ var _to_expression_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./to-expression.js */ \"(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/to-expression.js\");\n/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('./search.js').SearchOptions} SearchOptions\n * @typedef {import('./contents.js').ContentsOptions} ContentsOptions\n */\n\n/**\n * @typedef {ContentsOptions & ExtraOptions & SearchOptions} Options\n *\n * @typedef ExtraOptions\n *   Extra configuration fields.\n * @property {string | null | undefined} [heading]\n *   Heading to look for, wrapped in `new RegExp('^(' + value + ')$', 'i')`\n *   (default: `undefined`).\n *\n * @typedef Result\n *   Results.\n * @property {number | undefined} index\n *   Index of the node right after the table of contents heading, `-1` if no\n *   heading was found, `undefined` if no `heading` was given.\n * @property {number | undefined} endIndex\n *   Index of the first node after `heading` that is not part of its section,\n *   `-1` if no heading was found, `undefined` if no `heading` was given, same\n *   as `index` if there are no nodes between `heading` and the first heading\n *   in the table of contents.\n * @property {List | undefined} map\n *   List representing the generated table of contents, `undefined` if no table\n *   of contents could be created, either because no heading was found or\n *   because no following headings were found.\n */\n\n\n\n\n\n/**\n * Generate a table of contents from `tree`.\n *\n * Looks for the first heading matching `options.heading` (case insensitive) and\n * returns a table of contents (a list) for all following headings.\n * If no `heading` is specified, creates a table of contents for all headings in\n * `tree`.\n * `tree` is not changed.\n *\n * Links in the list to headings are based on GitHub’s style.\n * Only top-level headings (those not in blockquotes or lists), are used.\n * This default behavior can be changed by passing `options.parents`.\n *\n * @param {Nodes} tree\n *   Tree to search and generate from.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Result}\n *   Results.\n */\nfunction toc(tree, options) {\n  const settings = options || {}\n  const heading = settings.heading ? (0,_to_expression_js__WEBPACK_IMPORTED_MODULE_0__.toExpression)(settings.heading) : undefined\n  const result = (0,_search_js__WEBPACK_IMPORTED_MODULE_1__.search)(tree, heading, settings)\n\n  return {\n    index: heading ? result.index : undefined,\n    endIndex: heading ? result.endIndex : undefined,\n    map: result.map.length > 0 ? (0,_contents_js__WEBPACK_IMPORTED_MODULE_2__.contents)(result.map, settings) : undefined\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDcuMS4wL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSx1QkFBdUI7QUFDcEMsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSx5Q0FBeUM7QUFDdEQ7O0FBRUE7QUFDQSxhQUFhLGdEQUFnRDtBQUM3RDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJCQUEyQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEM7QUFDQTtBQUNBLGNBQWMsb0JBQW9CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxrQkFBa0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDO0FBQ0k7QUFDUzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBLHFDQUFxQywrREFBWTtBQUNqRCxpQkFBaUIsa0RBQU07O0FBRXZCO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxzREFBUTtBQUN6QztBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvRWJvb3RoL2FnZW50X2NfZnJhbWV3b3JrL3NyYy9yZWFsdGltZV9jbGllbnQvbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDcuMS4wL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkxpc3R9IExpc3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTm9kZXN9IE5vZGVzXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3NlYXJjaC5qcycpLlNlYXJjaE9wdGlvbnN9IFNlYXJjaE9wdGlvbnNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29udGVudHMuanMnKS5Db250ZW50c09wdGlvbnN9IENvbnRlbnRzT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHR5cGVkZWYge0NvbnRlbnRzT3B0aW9ucyAmIEV4dHJhT3B0aW9ucyAmIFNlYXJjaE9wdGlvbnN9IE9wdGlvbnNcbiAqXG4gKiBAdHlwZWRlZiBFeHRyYU9wdGlvbnNcbiAqICAgRXh0cmEgY29uZmlndXJhdGlvbiBmaWVsZHMuXG4gKiBAcHJvcGVydHkge3N0cmluZyB8IG51bGwgfCB1bmRlZmluZWR9IFtoZWFkaW5nXVxuICogICBIZWFkaW5nIHRvIGxvb2sgZm9yLCB3cmFwcGVkIGluIGBuZXcgUmVnRXhwKCdeKCcgKyB2YWx1ZSArICcpJCcsICdpJylgXG4gKiAgIChkZWZhdWx0OiBgdW5kZWZpbmVkYCkuXG4gKlxuICogQHR5cGVkZWYgUmVzdWx0XG4gKiAgIFJlc3VsdHMuXG4gKiBAcHJvcGVydHkge251bWJlciB8IHVuZGVmaW5lZH0gaW5kZXhcbiAqICAgSW5kZXggb2YgdGhlIG5vZGUgcmlnaHQgYWZ0ZXIgdGhlIHRhYmxlIG9mIGNvbnRlbnRzIGhlYWRpbmcsIGAtMWAgaWYgbm9cbiAqICAgaGVhZGluZyB3YXMgZm91bmQsIGB1bmRlZmluZWRgIGlmIG5vIGBoZWFkaW5nYCB3YXMgZ2l2ZW4uXG4gKiBAcHJvcGVydHkge251bWJlciB8IHVuZGVmaW5lZH0gZW5kSW5kZXhcbiAqICAgSW5kZXggb2YgdGhlIGZpcnN0IG5vZGUgYWZ0ZXIgYGhlYWRpbmdgIHRoYXQgaXMgbm90IHBhcnQgb2YgaXRzIHNlY3Rpb24sXG4gKiAgIGAtMWAgaWYgbm8gaGVhZGluZyB3YXMgZm91bmQsIGB1bmRlZmluZWRgIGlmIG5vIGBoZWFkaW5nYCB3YXMgZ2l2ZW4sIHNhbWVcbiAqICAgYXMgYGluZGV4YCBpZiB0aGVyZSBhcmUgbm8gbm9kZXMgYmV0d2VlbiBgaGVhZGluZ2AgYW5kIHRoZSBmaXJzdCBoZWFkaW5nXG4gKiAgIGluIHRoZSB0YWJsZSBvZiBjb250ZW50cy5cbiAqIEBwcm9wZXJ0eSB7TGlzdCB8IHVuZGVmaW5lZH0gbWFwXG4gKiAgIExpc3QgcmVwcmVzZW50aW5nIHRoZSBnZW5lcmF0ZWQgdGFibGUgb2YgY29udGVudHMsIGB1bmRlZmluZWRgIGlmIG5vIHRhYmxlXG4gKiAgIG9mIGNvbnRlbnRzIGNvdWxkIGJlIGNyZWF0ZWQsIGVpdGhlciBiZWNhdXNlIG5vIGhlYWRpbmcgd2FzIGZvdW5kIG9yXG4gKiAgIGJlY2F1c2Ugbm8gZm9sbG93aW5nIGhlYWRpbmdzIHdlcmUgZm91bmQuXG4gKi9cblxuaW1wb3J0IHtzZWFyY2h9IGZyb20gJy4vc2VhcmNoLmpzJ1xuaW1wb3J0IHtjb250ZW50c30gZnJvbSAnLi9jb250ZW50cy5qcydcbmltcG9ydCB7dG9FeHByZXNzaW9ufSBmcm9tICcuL3RvLWV4cHJlc3Npb24uanMnXG5cbi8qKlxuICogR2VuZXJhdGUgYSB0YWJsZSBvZiBjb250ZW50cyBmcm9tIGB0cmVlYC5cbiAqXG4gKiBMb29rcyBmb3IgdGhlIGZpcnN0IGhlYWRpbmcgbWF0Y2hpbmcgYG9wdGlvbnMuaGVhZGluZ2AgKGNhc2UgaW5zZW5zaXRpdmUpIGFuZFxuICogcmV0dXJucyBhIHRhYmxlIG9mIGNvbnRlbnRzIChhIGxpc3QpIGZvciBhbGwgZm9sbG93aW5nIGhlYWRpbmdzLlxuICogSWYgbm8gYGhlYWRpbmdgIGlzIHNwZWNpZmllZCwgY3JlYXRlcyBhIHRhYmxlIG9mIGNvbnRlbnRzIGZvciBhbGwgaGVhZGluZ3MgaW5cbiAqIGB0cmVlYC5cbiAqIGB0cmVlYCBpcyBub3QgY2hhbmdlZC5cbiAqXG4gKiBMaW5rcyBpbiB0aGUgbGlzdCB0byBoZWFkaW5ncyBhcmUgYmFzZWQgb24gR2l0SHVi4oCZcyBzdHlsZS5cbiAqIE9ubHkgdG9wLWxldmVsIGhlYWRpbmdzICh0aG9zZSBub3QgaW4gYmxvY2txdW90ZXMgb3IgbGlzdHMpLCBhcmUgdXNlZC5cbiAqIFRoaXMgZGVmYXVsdCBiZWhhdmlvciBjYW4gYmUgY2hhbmdlZCBieSBwYXNzaW5nIGBvcHRpb25zLnBhcmVudHNgLlxuICpcbiAqIEBwYXJhbSB7Tm9kZXN9IHRyZWVcbiAqICAgVHJlZSB0byBzZWFyY2ggYW5kIGdlbmVyYXRlIGZyb20uXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHJldHVybnMge1Jlc3VsdH1cbiAqICAgUmVzdWx0cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvYyh0cmVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHNldHRpbmdzID0gb3B0aW9ucyB8fCB7fVxuICBjb25zdCBoZWFkaW5nID0gc2V0dGluZ3MuaGVhZGluZyA/IHRvRXhwcmVzc2lvbihzZXR0aW5ncy5oZWFkaW5nKSA6IHVuZGVmaW5lZFxuICBjb25zdCByZXN1bHQgPSBzZWFyY2godHJlZSwgaGVhZGluZywgc2V0dGluZ3MpXG5cbiAgcmV0dXJuIHtcbiAgICBpbmRleDogaGVhZGluZyA/IHJlc3VsdC5pbmRleCA6IHVuZGVmaW5lZCxcbiAgICBlbmRJbmRleDogaGVhZGluZyA/IHJlc3VsdC5lbmRJbmRleCA6IHVuZGVmaW5lZCxcbiAgICBtYXA6IHJlc3VsdC5tYXAubGVuZ3RoID4gMCA/IGNvbnRlbnRzKHJlc3VsdC5tYXAsIHNldHRpbmdzKSA6IHVuZGVmaW5lZFxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/search.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/search.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   search: () => (/* binding */ search)\n/* harmony export */ });\n/* harmony import */ var github_slugger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! github-slugger */ \"(ssr)/../../node_modules/.pnpm/github-slugger@2.0.0/node_modules/github-slugger/index.js\");\n/* harmony import */ var mdast_util_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mdast-util-to-string */ \"(ssr)/../../node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js\");\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-is */ \"(ssr)/../../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/../../node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js\");\n/* harmony import */ var _to_expression_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./to-expression.js */ \"(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/to-expression.js\");\n/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {Heading['depth']} Rank\n *\n */\n\n/**\n * @typedef SearchOptions\n *   Search configuration.\n * @property {Rank | null | undefined} [maxDepth=6]\n *   Maximum heading depth to include in the table of contents (default: `6`).\n *\n *   This is inclusive: when set to `3`, level three headings are included\n *   (those with three hashes, `###`).\n * @property {Rank | null | undefined} [minDepth=1]\n *   Minimum heading depth to include in the table of contents (default: `1`).\n *\n *   This is inclusive: when set to `3`, level three headings are included\n *   (those with three hashes, `###`).\n * @property {string | null | undefined} [skip]\n *   Headings to skip, wrapped in `new RegExp('^(' + value + ')$', 'i')`\n *   (default: `undefined`).\n *\n *   Any heading matching this expression will not be present in the table of\n *   contents.\n * @property {Test} [parents]\n *   Allow headings to be children of certain node types (default: the to `toc`\n *   given `tree`, to only allow top-level headings) (default:\n *   `d => d === tree`).\n *\n *   Internally, uses `unist-util-is` to check, so `parents` can be any\n *   `is`-compatible test.\n *\n * @typedef SearchEntry\n *   Entry.\n * @property {string} id\n *   ID of entry.\n * @property {Array<PhrasingContent>} children\n *   Contents of entry.\n * @property {Rank} depth\n *   Rank of entry.\n *\n * @typedef SearchResult\n *   Results.\n * @property {number} index\n *   Where the contents section starts, if looking for a heading.\n * @property {number} endIndex\n *   Where the contents section ends, if looking for a heading.\n * @property {Array<SearchEntry>} map\n *   List of entries.\n */\n\n\n\n\n\n\n\nconst slugs = new github_slugger__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()\n\n/**\n * Search a node for a toc.\n *\n * @param {Nodes} root\n * @param {RegExp | undefined} expression\n * @param {SearchOptions} settings\n * @returns {SearchResult}\n */\nfunction search(root, expression, settings) {\n  const max = 'children' in root ? root.children.length : 0\n  const skip = settings.skip ? (0,_to_expression_js__WEBPACK_IMPORTED_MODULE_1__.toExpression)(settings.skip) : undefined\n  const parents = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_2__.convert)(\n    settings.parents ||\n      function (d) {\n        return d === root\n      }\n  )\n  /** @type {Array<SearchEntry>} */\n  const map = []\n  /** @type {number | undefined} */\n  let index\n  /** @type {number | undefined} */\n  let endIndex\n  /** @type {Heading | undefined} */\n  let opening\n\n  slugs.reset()\n\n  // Visit all headings in `root`.  We `slug` all headings (to account for\n  // duplicates), but only create a TOC from top-level headings (by default).\n  ;(0,unist_util_visit__WEBPACK_IMPORTED_MODULE_3__.visit)(root, 'heading', function (node, position, parent) {\n    const value = (0,mdast_util_to_string__WEBPACK_IMPORTED_MODULE_4__.toString)(node, {includeImageAlt: false})\n    /** @type {string} */\n    // @ts-expect-error `hProperties` from <https://github.com/syntax-tree/mdast-util-to-hast>\n    const id = node.data && node.data.hProperties && node.data.hProperties.id\n    const slug = slugs.slug(id || value)\n\n    if (!parents(parent)) {\n      return\n    }\n\n    // Our opening heading.\n    if (\n      position !== undefined &&\n      expression &&\n      !index &&\n      expression.test(value)\n    ) {\n      index = position + 1\n      opening = node\n      return\n    }\n\n    // Our closing heading.\n    if (\n      position !== undefined &&\n      opening &&\n      !endIndex &&\n      node.depth <= opening.depth\n    ) {\n      endIndex = position\n    }\n\n    // A heading after the closing (if we were looking for one).\n    if (\n      (endIndex || !expression) &&\n      (!settings.minDepth || node.depth >= settings.minDepth) &&\n      (!settings.maxDepth || node.depth <= settings.maxDepth) &&\n      (!skip || !skip.test(value))\n    ) {\n      map.push({depth: node.depth, children: node.children, id: slug})\n    }\n  })\n\n  return {\n    index: index === undefined ? -1 : index,\n    endIndex: index === undefined ? -1 : endIndex || max,\n    map\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDcuMS4wL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0EsYUFBYSx5QkFBeUI7QUFDdEMsYUFBYSx1QkFBdUI7QUFDcEMsYUFBYSxpQ0FBaUM7QUFDOUMsYUFBYSw4QkFBOEI7QUFDM0M7O0FBRUE7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUJBQXlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5QkFBeUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJCQUEyQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsd0JBQXdCO0FBQ3RDO0FBQ0EsY0FBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEM7QUFDQTs7QUFFb0M7QUFDUztBQUNSO0FBQ0M7QUFDUzs7QUFFL0Msa0JBQWtCLHNEQUFPOztBQUV6QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSwrQkFBK0IsK0RBQVk7QUFDM0Msa0JBQWtCLHNEQUFPO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG9CQUFvQjtBQUNqQztBQUNBLGFBQWEsb0JBQW9CO0FBQ2pDO0FBQ0EsYUFBYSxvQkFBb0I7QUFDakM7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSx3REFBSztBQUNQLGtCQUFrQiw4REFBUSxRQUFRLHVCQUF1QjtBQUN6RCxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBcUQ7QUFDckU7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL0Vib290aC9hZ2VudF9jX2ZyYW1ld29yay9zcmMvcmVhbHRpbWVfY2xpZW50L25vZGVfbW9kdWxlcy8ucG5wbS9tZGFzdC11dGlsLXRvY0A3LjEuMC9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10b2MvbGliL3NlYXJjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuSGVhZGluZ30gSGVhZGluZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Ob2Rlc30gTm9kZXNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUGhyYXNpbmdDb250ZW50fSBQaHJhc2luZ0NvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0LXV0aWwtaXMnKS5UZXN0fSBUZXN0XG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7SGVhZGluZ1snZGVwdGgnXX0gUmFua1xuICpcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIFNlYXJjaE9wdGlvbnNcbiAqICAgU2VhcmNoIGNvbmZpZ3VyYXRpb24uXG4gKiBAcHJvcGVydHkge1JhbmsgfCBudWxsIHwgdW5kZWZpbmVkfSBbbWF4RGVwdGg9Nl1cbiAqICAgTWF4aW11bSBoZWFkaW5nIGRlcHRoIHRvIGluY2x1ZGUgaW4gdGhlIHRhYmxlIG9mIGNvbnRlbnRzIChkZWZhdWx0OiBgNmApLlxuICpcbiAqICAgVGhpcyBpcyBpbmNsdXNpdmU6IHdoZW4gc2V0IHRvIGAzYCwgbGV2ZWwgdGhyZWUgaGVhZGluZ3MgYXJlIGluY2x1ZGVkXG4gKiAgICh0aG9zZSB3aXRoIHRocmVlIGhhc2hlcywgYCMjI2ApLlxuICogQHByb3BlcnR5IHtSYW5rIHwgbnVsbCB8IHVuZGVmaW5lZH0gW21pbkRlcHRoPTFdXG4gKiAgIE1pbmltdW0gaGVhZGluZyBkZXB0aCB0byBpbmNsdWRlIGluIHRoZSB0YWJsZSBvZiBjb250ZW50cyAoZGVmYXVsdDogYDFgKS5cbiAqXG4gKiAgIFRoaXMgaXMgaW5jbHVzaXZlOiB3aGVuIHNldCB0byBgM2AsIGxldmVsIHRocmVlIGhlYWRpbmdzIGFyZSBpbmNsdWRlZFxuICogICAodGhvc2Ugd2l0aCB0aHJlZSBoYXNoZXMsIGAjIyNgKS5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3NraXBdXG4gKiAgIEhlYWRpbmdzIHRvIHNraXAsIHdyYXBwZWQgaW4gYG5ldyBSZWdFeHAoJ14oJyArIHZhbHVlICsgJykkJywgJ2knKWBcbiAqICAgKGRlZmF1bHQ6IGB1bmRlZmluZWRgKS5cbiAqXG4gKiAgIEFueSBoZWFkaW5nIG1hdGNoaW5nIHRoaXMgZXhwcmVzc2lvbiB3aWxsIG5vdCBiZSBwcmVzZW50IGluIHRoZSB0YWJsZSBvZlxuICogICBjb250ZW50cy5cbiAqIEBwcm9wZXJ0eSB7VGVzdH0gW3BhcmVudHNdXG4gKiAgIEFsbG93IGhlYWRpbmdzIHRvIGJlIGNoaWxkcmVuIG9mIGNlcnRhaW4gbm9kZSB0eXBlcyAoZGVmYXVsdDogdGhlIHRvIGB0b2NgXG4gKiAgIGdpdmVuIGB0cmVlYCwgdG8gb25seSBhbGxvdyB0b3AtbGV2ZWwgaGVhZGluZ3MpIChkZWZhdWx0OlxuICogICBgZCA9PiBkID09PSB0cmVlYCkuXG4gKlxuICogICBJbnRlcm5hbGx5LCB1c2VzIGB1bmlzdC11dGlsLWlzYCB0byBjaGVjaywgc28gYHBhcmVudHNgIGNhbiBiZSBhbnlcbiAqICAgYGlzYC1jb21wYXRpYmxlIHRlc3QuXG4gKlxuICogQHR5cGVkZWYgU2VhcmNoRW50cnlcbiAqICAgRW50cnkuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRcbiAqICAgSUQgb2YgZW50cnkuXG4gKiBAcHJvcGVydHkge0FycmF5PFBocmFzaW5nQ29udGVudD59IGNoaWxkcmVuXG4gKiAgIENvbnRlbnRzIG9mIGVudHJ5LlxuICogQHByb3BlcnR5IHtSYW5rfSBkZXB0aFxuICogICBSYW5rIG9mIGVudHJ5LlxuICpcbiAqIEB0eXBlZGVmIFNlYXJjaFJlc3VsdFxuICogICBSZXN1bHRzLlxuICogQHByb3BlcnR5IHtudW1iZXJ9IGluZGV4XG4gKiAgIFdoZXJlIHRoZSBjb250ZW50cyBzZWN0aW9uIHN0YXJ0cywgaWYgbG9va2luZyBmb3IgYSBoZWFkaW5nLlxuICogQHByb3BlcnR5IHtudW1iZXJ9IGVuZEluZGV4XG4gKiAgIFdoZXJlIHRoZSBjb250ZW50cyBzZWN0aW9uIGVuZHMsIGlmIGxvb2tpbmcgZm9yIGEgaGVhZGluZy5cbiAqIEBwcm9wZXJ0eSB7QXJyYXk8U2VhcmNoRW50cnk+fSBtYXBcbiAqICAgTGlzdCBvZiBlbnRyaWVzLlxuICovXG5cbmltcG9ydCBTbHVnZ2VyIGZyb20gJ2dpdGh1Yi1zbHVnZ2VyJ1xuaW1wb3J0IHt0b1N0cmluZ30gZnJvbSAnbWRhc3QtdXRpbC10by1zdHJpbmcnXG5pbXBvcnQge2NvbnZlcnR9IGZyb20gJ3VuaXN0LXV0aWwtaXMnXG5pbXBvcnQge3Zpc2l0fSBmcm9tICd1bmlzdC11dGlsLXZpc2l0J1xuaW1wb3J0IHt0b0V4cHJlc3Npb259IGZyb20gJy4vdG8tZXhwcmVzc2lvbi5qcydcblxuY29uc3Qgc2x1Z3MgPSBuZXcgU2x1Z2dlcigpXG5cbi8qKlxuICogU2VhcmNoIGEgbm9kZSBmb3IgYSB0b2MuXG4gKlxuICogQHBhcmFtIHtOb2Rlc30gcm9vdFxuICogQHBhcmFtIHtSZWdFeHAgfCB1bmRlZmluZWR9IGV4cHJlc3Npb25cbiAqIEBwYXJhbSB7U2VhcmNoT3B0aW9uc30gc2V0dGluZ3NcbiAqIEByZXR1cm5zIHtTZWFyY2hSZXN1bHR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gocm9vdCwgZXhwcmVzc2lvbiwgc2V0dGluZ3MpIHtcbiAgY29uc3QgbWF4ID0gJ2NoaWxkcmVuJyBpbiByb290ID8gcm9vdC5jaGlsZHJlbi5sZW5ndGggOiAwXG4gIGNvbnN0IHNraXAgPSBzZXR0aW5ncy5za2lwID8gdG9FeHByZXNzaW9uKHNldHRpbmdzLnNraXApIDogdW5kZWZpbmVkXG4gIGNvbnN0IHBhcmVudHMgPSBjb252ZXJ0KFxuICAgIHNldHRpbmdzLnBhcmVudHMgfHxcbiAgICAgIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgIHJldHVybiBkID09PSByb290XG4gICAgICB9XG4gIClcbiAgLyoqIEB0eXBlIHtBcnJheTxTZWFyY2hFbnRyeT59ICovXG4gIGNvbnN0IG1hcCA9IFtdXG4gIC8qKiBAdHlwZSB7bnVtYmVyIHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgaW5kZXhcbiAgLyoqIEB0eXBlIHtudW1iZXIgfCB1bmRlZmluZWR9ICovXG4gIGxldCBlbmRJbmRleFxuICAvKiogQHR5cGUge0hlYWRpbmcgfCB1bmRlZmluZWR9ICovXG4gIGxldCBvcGVuaW5nXG5cbiAgc2x1Z3MucmVzZXQoKVxuXG4gIC8vIFZpc2l0IGFsbCBoZWFkaW5ncyBpbiBgcm9vdGAuICBXZSBgc2x1Z2AgYWxsIGhlYWRpbmdzICh0byBhY2NvdW50IGZvclxuICAvLyBkdXBsaWNhdGVzKSwgYnV0IG9ubHkgY3JlYXRlIGEgVE9DIGZyb20gdG9wLWxldmVsIGhlYWRpbmdzIChieSBkZWZhdWx0KS5cbiAgdmlzaXQocm9vdCwgJ2hlYWRpbmcnLCBmdW5jdGlvbiAobm9kZSwgcG9zaXRpb24sIHBhcmVudCkge1xuICAgIGNvbnN0IHZhbHVlID0gdG9TdHJpbmcobm9kZSwge2luY2x1ZGVJbWFnZUFsdDogZmFsc2V9KVxuICAgIC8qKiBAdHlwZSB7c3RyaW5nfSAqL1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgYGhQcm9wZXJ0aWVzYCBmcm9tIDxodHRwczovL2dpdGh1Yi5jb20vc3ludGF4LXRyZWUvbWRhc3QtdXRpbC10by1oYXN0PlxuICAgIGNvbnN0IGlkID0gbm9kZS5kYXRhICYmIG5vZGUuZGF0YS5oUHJvcGVydGllcyAmJiBub2RlLmRhdGEuaFByb3BlcnRpZXMuaWRcbiAgICBjb25zdCBzbHVnID0gc2x1Z3Muc2x1ZyhpZCB8fCB2YWx1ZSlcblxuICAgIGlmICghcGFyZW50cyhwYXJlbnQpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBPdXIgb3BlbmluZyBoZWFkaW5nLlxuICAgIGlmIChcbiAgICAgIHBvc2l0aW9uICE9PSB1bmRlZmluZWQgJiZcbiAgICAgIGV4cHJlc3Npb24gJiZcbiAgICAgICFpbmRleCAmJlxuICAgICAgZXhwcmVzc2lvbi50ZXN0KHZhbHVlKVxuICAgICkge1xuICAgICAgaW5kZXggPSBwb3NpdGlvbiArIDFcbiAgICAgIG9wZW5pbmcgPSBub2RlXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBPdXIgY2xvc2luZyBoZWFkaW5nLlxuICAgIGlmIChcbiAgICAgIHBvc2l0aW9uICE9PSB1bmRlZmluZWQgJiZcbiAgICAgIG9wZW5pbmcgJiZcbiAgICAgICFlbmRJbmRleCAmJlxuICAgICAgbm9kZS5kZXB0aCA8PSBvcGVuaW5nLmRlcHRoXG4gICAgKSB7XG4gICAgICBlbmRJbmRleCA9IHBvc2l0aW9uXG4gICAgfVxuXG4gICAgLy8gQSBoZWFkaW5nIGFmdGVyIHRoZSBjbG9zaW5nIChpZiB3ZSB3ZXJlIGxvb2tpbmcgZm9yIG9uZSkuXG4gICAgaWYgKFxuICAgICAgKGVuZEluZGV4IHx8ICFleHByZXNzaW9uKSAmJlxuICAgICAgKCFzZXR0aW5ncy5taW5EZXB0aCB8fCBub2RlLmRlcHRoID49IHNldHRpbmdzLm1pbkRlcHRoKSAmJlxuICAgICAgKCFzZXR0aW5ncy5tYXhEZXB0aCB8fCBub2RlLmRlcHRoIDw9IHNldHRpbmdzLm1heERlcHRoKSAmJlxuICAgICAgKCFza2lwIHx8ICFza2lwLnRlc3QodmFsdWUpKVxuICAgICkge1xuICAgICAgbWFwLnB1c2goe2RlcHRoOiBub2RlLmRlcHRoLCBjaGlsZHJlbjogbm9kZS5jaGlsZHJlbiwgaWQ6IHNsdWd9KVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4ge1xuICAgIGluZGV4OiBpbmRleCA9PT0gdW5kZWZpbmVkID8gLTEgOiBpbmRleCxcbiAgICBlbmRJbmRleDogaW5kZXggPT09IHVuZGVmaW5lZCA/IC0xIDogZW5kSW5kZXggfHwgbWF4LFxuICAgIG1hcFxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/search.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/to-expression.js":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/to-expression.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toExpression: () => (/* binding */ toExpression)\n/* harmony export */ });\n/**\n * Transform a string into an applicable expression.\n *\n * @param {string} value\n * @returns {RegExp}\n */\nfunction toExpression(value) {\n  return new RegExp('^(' + value + ')$', 'i')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDcuMS4wL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvdG8tZXhwcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL0Vib290aC9hZ2VudF9jX2ZyYW1ld29yay9zcmMvcmVhbHRpbWVfY2xpZW50L25vZGVfbW9kdWxlcy8ucG5wbS9tZGFzdC11dGlsLXRvY0A3LjEuMC9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10b2MvbGliL3RvLWV4cHJlc3Npb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUcmFuc2Zvcm0gYSBzdHJpbmcgaW50byBhbiBhcHBsaWNhYmxlIGV4cHJlc3Npb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJucyB7UmVnRXhwfVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9FeHByZXNzaW9uKHZhbHVlKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeKCcgKyB2YWx1ZSArICcpJCcsICdpJylcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/mdast-util-toc@7.1.0/node_modules/mdast-util-toc/lib/to-expression.js\n");

/***/ })

};
;