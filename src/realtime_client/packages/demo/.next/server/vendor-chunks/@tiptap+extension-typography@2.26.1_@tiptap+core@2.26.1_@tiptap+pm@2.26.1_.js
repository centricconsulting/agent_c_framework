"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tiptap+extension-typography@2.26.1_@tiptap+core@2.26.1_@tiptap+pm@2.26.1_";
exports.ids = ["vendor-chunks/@tiptap+extension-typography@2.26.1_@tiptap+core@2.26.1_@tiptap+pm@2.26.1_"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@tiptap+extension-typography@2.26.1_@tiptap+core@2.26.1_@tiptap+pm@2.26.1_/node_modules/@tiptap/extension-typography/dist/index.cjs":
/*!********************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@tiptap+extension-typography@2.26.1_@tiptap+core@2.26.1_@tiptap+pm@2.26.1_/node_modules/@tiptap/extension-typography/dist/index.cjs ***!
  \********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @tiptap/core */ \"(ssr)/../../node_modules/.pnpm/@tiptap+core@2.26.1_@tiptap+pm@2.26.1/node_modules/@tiptap/core/dist/index.cjs\");\n\nconst emDash = (override) => core.textInputRule({\n    find: /--$/,\n    replace: override !== null && override !== void 0 ? override : '—',\n});\nconst ellipsis = (override) => core.textInputRule({\n    find: /\\.\\.\\.$/,\n    replace: override !== null && override !== void 0 ? override : '…',\n});\nconst openDoubleQuote = (override) => core.textInputRule({\n    find: /(?:^|[\\s{[(<'\"\\u2018\\u201C])(\")$/,\n    replace: override !== null && override !== void 0 ? override : '“',\n});\nconst closeDoubleQuote = (override) => core.textInputRule({\n    find: /\"$/,\n    replace: override !== null && override !== void 0 ? override : '”',\n});\nconst openSingleQuote = (override) => core.textInputRule({\n    find: /(?:^|[\\s{[(<'\"\\u2018\\u201C])(')$/,\n    replace: override !== null && override !== void 0 ? override : '‘',\n});\nconst closeSingleQuote = (override) => core.textInputRule({\n    find: /'$/,\n    replace: override !== null && override !== void 0 ? override : '’',\n});\nconst leftArrow = (override) => core.textInputRule({\n    find: /<-$/,\n    replace: override !== null && override !== void 0 ? override : '←',\n});\nconst rightArrow = (override) => core.textInputRule({\n    find: /->$/,\n    replace: override !== null && override !== void 0 ? override : '→',\n});\nconst copyright = (override) => core.textInputRule({\n    find: /\\(c\\)$/,\n    replace: override !== null && override !== void 0 ? override : '©',\n});\nconst trademark = (override) => core.textInputRule({\n    find: /\\(tm\\)$/,\n    replace: override !== null && override !== void 0 ? override : '™',\n});\nconst servicemark = (override) => core.textInputRule({\n    find: /\\(sm\\)$/,\n    replace: override !== null && override !== void 0 ? override : '℠',\n});\nconst registeredTrademark = (override) => core.textInputRule({\n    find: /\\(r\\)$/,\n    replace: override !== null && override !== void 0 ? override : '®',\n});\nconst oneHalf = (override) => core.textInputRule({\n    find: /(?:^|\\s)(1\\/2)\\s$/,\n    replace: override !== null && override !== void 0 ? override : '½',\n});\nconst plusMinus = (override) => core.textInputRule({\n    find: /\\+\\/-$/,\n    replace: override !== null && override !== void 0 ? override : '±',\n});\nconst notEqual = (override) => core.textInputRule({\n    find: /!=$/,\n    replace: override !== null && override !== void 0 ? override : '≠',\n});\nconst laquo = (override) => core.textInputRule({\n    find: /<<$/,\n    replace: override !== null && override !== void 0 ? override : '«',\n});\nconst raquo = (override) => core.textInputRule({\n    find: />>$/,\n    replace: override !== null && override !== void 0 ? override : '»',\n});\nconst multiplication = (override) => core.textInputRule({\n    find: /\\d+\\s?([*x])\\s?\\d+$/,\n    replace: override !== null && override !== void 0 ? override : '×',\n});\nconst superscriptTwo = (override) => core.textInputRule({\n    find: /\\^2$/,\n    replace: override !== null && override !== void 0 ? override : '²',\n});\nconst superscriptThree = (override) => core.textInputRule({\n    find: /\\^3$/,\n    replace: override !== null && override !== void 0 ? override : '³',\n});\nconst oneQuarter = (override) => core.textInputRule({\n    find: /(?:^|\\s)(1\\/4)\\s$/,\n    replace: override !== null && override !== void 0 ? override : '¼',\n});\nconst threeQuarters = (override) => core.textInputRule({\n    find: /(?:^|\\s)(3\\/4)\\s$/,\n    replace: override !== null && override !== void 0 ? override : '¾',\n});\n/**\n * This extension allows you to add typography replacements for specific characters.\n * @see https://www.tiptap.dev/api/extensions/typography\n */\nconst Typography = core.Extension.create({\n    name: 'typography',\n    addOptions() {\n        return {\n            closeDoubleQuote: '”',\n            closeSingleQuote: '’',\n            copyright: '©',\n            ellipsis: '…',\n            emDash: '—',\n            laquo: '«',\n            leftArrow: '←',\n            multiplication: '×',\n            notEqual: '≠',\n            oneHalf: '½',\n            oneQuarter: '¼',\n            openDoubleQuote: '“',\n            openSingleQuote: '‘',\n            plusMinus: '±',\n            raquo: '»',\n            registeredTrademark: '®',\n            rightArrow: '→',\n            servicemark: '℠',\n            superscriptThree: '³',\n            superscriptTwo: '²',\n            threeQuarters: '¾',\n            trademark: '™',\n        };\n    },\n    addInputRules() {\n        const rules = [];\n        if (this.options.emDash !== false) {\n            rules.push(emDash(this.options.emDash));\n        }\n        if (this.options.ellipsis !== false) {\n            rules.push(ellipsis(this.options.ellipsis));\n        }\n        if (this.options.openDoubleQuote !== false) {\n            rules.push(openDoubleQuote(this.options.openDoubleQuote));\n        }\n        if (this.options.closeDoubleQuote !== false) {\n            rules.push(closeDoubleQuote(this.options.closeDoubleQuote));\n        }\n        if (this.options.openSingleQuote !== false) {\n            rules.push(openSingleQuote(this.options.openSingleQuote));\n        }\n        if (this.options.closeSingleQuote !== false) {\n            rules.push(closeSingleQuote(this.options.closeSingleQuote));\n        }\n        if (this.options.leftArrow !== false) {\n            rules.push(leftArrow(this.options.leftArrow));\n        }\n        if (this.options.rightArrow !== false) {\n            rules.push(rightArrow(this.options.rightArrow));\n        }\n        if (this.options.copyright !== false) {\n            rules.push(copyright(this.options.copyright));\n        }\n        if (this.options.trademark !== false) {\n            rules.push(trademark(this.options.trademark));\n        }\n        if (this.options.servicemark !== false) {\n            rules.push(servicemark(this.options.servicemark));\n        }\n        if (this.options.registeredTrademark !== false) {\n            rules.push(registeredTrademark(this.options.registeredTrademark));\n        }\n        if (this.options.oneHalf !== false) {\n            rules.push(oneHalf(this.options.oneHalf));\n        }\n        if (this.options.plusMinus !== false) {\n            rules.push(plusMinus(this.options.plusMinus));\n        }\n        if (this.options.notEqual !== false) {\n            rules.push(notEqual(this.options.notEqual));\n        }\n        if (this.options.laquo !== false) {\n            rules.push(laquo(this.options.laquo));\n        }\n        if (this.options.raquo !== false) {\n            rules.push(raquo(this.options.raquo));\n        }\n        if (this.options.multiplication !== false) {\n            rules.push(multiplication(this.options.multiplication));\n        }\n        if (this.options.superscriptTwo !== false) {\n            rules.push(superscriptTwo(this.options.superscriptTwo));\n        }\n        if (this.options.superscriptThree !== false) {\n            rules.push(superscriptThree(this.options.superscriptThree));\n        }\n        if (this.options.oneQuarter !== false) {\n            rules.push(oneQuarter(this.options.oneQuarter));\n        }\n        if (this.options.threeQuarters !== false) {\n            rules.push(threeQuarters(this.options.threeQuarters));\n        }\n        return rules;\n    },\n});\n\nexports.Typography = Typography;\nexports.closeDoubleQuote = closeDoubleQuote;\nexports.closeSingleQuote = closeSingleQuote;\nexports.copyright = copyright;\nexports[\"default\"] = Typography;\nexports.ellipsis = ellipsis;\nexports.emDash = emDash;\nexports.laquo = laquo;\nexports.leftArrow = leftArrow;\nexports.multiplication = multiplication;\nexports.notEqual = notEqual;\nexports.oneHalf = oneHalf;\nexports.oneQuarter = oneQuarter;\nexports.openDoubleQuote = openDoubleQuote;\nexports.openSingleQuote = openSingleQuote;\nexports.plusMinus = plusMinus;\nexports.raquo = raquo;\nexports.registeredTrademark = registeredTrademark;\nexports.rightArrow = rightArrow;\nexports.servicemark = servicemark;\nexports.superscriptThree = superscriptThree;\nexports.superscriptTwo = superscriptTwo;\nexports.threeQuarters = threeQuarters;\nexports.trademark = trademark;\n//# sourceMappingURL=index.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@tiptap+extension-typography@2.26.1_@tiptap+core@2.26.1_@tiptap+pm@2.26.1_/node_modules/@tiptap/extension-typography/dist/index.cjs\n");

/***/ })

};
;