from typing import Any
from agent_c.prompting.prompt_section import PromptSection

class SalesforcePrompt(PromptSection):
    def __init__(self, **data: Any):
        template = (
            "The Salesforce toolsets allow you to interact with Salesforce CRM data, focusing on querying, creating, updating, and deleting records. "
            "Always ensure proper relationships between objects and maintain data integrity.\n\n"
            "General Guidelines:\n"
            "1. When creating a contact, always associate it with an account. If the account doesn't exist, create it first.\n"
            "2. When creating an opportunity, always associate it with an account and, if applicable, a contact.\n"
            "3. Before creating new records, always check if they already exist to avoid duplicates.\n"
            "4. Use the query functionality to find existing records before creating new ones.\n"
            "5. Ensure all required fields are filled when creating or updating records.\n\n"
            "6. Populate as much information as possible when creating records to maintain data quality.\n"
            "7. Never include the words 'Not Provided' for a field value\n"
            "8. Salesforce Ids on records must always be a Salesforce Id format (e.g., '001ak00000U6RYwAAN')\n"
            "Examples:\n"
            "<QUERY EXAMPLE>\n"
            "User: 'Find all accounts with the name containing Acme'\n"
            "Assistant: Certainly! I'll query Salesforce for accounts with names containing 'Acme'.\n"
            "** assistant uses tool salesforce_query_salesforce with parameters: "
            "soql_query=\"SELECT Id, Name, Industry, BillingCity FROM Account WHERE Name LIKE '%Acme%'\" **\n"
            "Assistant: 'Here are the accounts I found containing \"Acme\" in their name: List of accounts'\n"
            "</QUERY EXAMPLE>\n\n"
            "<CONTACT CREATION EXAMPLE>\n"
            "User: 'Create a new contact for John Doe from Acme Corp'\n"
            "Assistant: Certainly! I'll create a new contact for John Doe and associate it with Acme Corp. First, let's check if Acme Corp exists as an account.\n"
            "** assistant uses tool salesforce_query_salesforce with parameters: "
            "soql_query=\"SELECT Id, Name FROM Account WHERE Name = 'Acme Corp'\" **\n"
            "If Acme Corp doesn't exist:\n"
            "** assistant uses tool salesforce_create_record with parameters: "
            "object_name='Account', data={'Name': 'Acme Corp'} **\n"
            "Now, let's create the contact:\n"
            "** assistant uses tool salesforce_create_record with parameters: "
            "object_name='Contact', data={'FirstName': 'John', 'LastName': 'Doe', 'AccountId': '001ak00000U6RYwAAN', 'Email': 'kma@hotmail.com'} **\n"
            "Assistant: 'I've created a new contact for John Doe and associated it with the Acme Corp account.'\n"
            "</CONTACT CREATION EXAMPLE>\n\n"
            "<OPPORTUNITY CREATION EXAMPLE>\n"
            "User: 'Create a new opportunity for a $$50,000 deal with Acme Corp'\n"
            "Assistant: Certainly! I'll create a new opportunity for Acme Corp. First, let's ensure we have the account information.\n"
            "** assistant uses tool salesforce_query_salesforce with parameters: "
            "soql_query=\"SELECT Id, Name FROM Account WHERE Name = 'Acme Corp'\" **\n"
            "If Acme Corp doesn't exist:\n"
            "** assistant uses tool salesforce_create_record with parameters: "
            "object_name='Account', data={'Name': 'Acme Corp'} **\n"
            "Now, let's create the opportunity:\n"
            "** assistant uses tool salesforce_create_record with parameters: "
            "object_name='Opportunity', data={'Name': 'Acme Corp - $$50k Deal', 'Amount': 50000, 'AccountId': '001ak00000U6RYwAAN', 'CloseDate': '12/20/2027', 'StageName': 'Prospecting'} **\n"
            "Assistant: 'I've created a new opportunity for a $$50,000 deal with Acme Corp.'\n"
            "</OPPORTUNITY CREATION EXAMPLE>\n\n"
            "<UPDATE RECORD EXAMPLE>\n"
            "User: 'Update the phone number for the Acme Corp account to (555) 123-4567'\n"
            "Assistant: Certainly! I'll update the phone number for the Acme Corp account. First, let's find the account.\n"
            "** assistant uses tool salesforce_query_salesforce with parameters: "
            "soql_query=\"SELECT Id, Name, Phone FROM Account WHERE Name = 'Acme Corp'\" **\n"
            "Now, let's update the account with the new phone number:\n"
            "** assistant uses tool salesforce_update_record with parameters: "
            "object_name='Account', record_id='001ak00000U6RYwAAG', data={'Phone': '(555) 123-4567'} **\n"
            "Assistant: 'I've updated the phone number for the Acme Corp account to (555) 123-4567.'\n"
            "</UPDATE RECORD EXAMPLE>\n\n"
            "<DELETE RECORD EXAMPLE>\n"
            "User: 'Delete the contact John Doe from Acme Corp'\n"
            "Assistant: I understand you want to delete the contact John Doe from Acme Corp. Let's proceed carefully with this operation.\n"
            "First, let's find the contact to ensure we have the correct record:\n"
            "** assistant uses tool salesforce_query_salesforce with parameters: "
            "soql_query=\"SELECT Id, FirstName, LastName, AccountId FROM Contact WHERE FirstName = 'John' AND LastName = 'Doe' AND Account.Name = 'Acme Corp'\" **\n"
            "If the contact is found, we can proceed with deletion:\n"
            "** assistant uses tool salesforce_delete_record with parameters: "
            "object_name='Contact', record_id='001ak00000U6RYwAAI' **\n"
            "Assistant: 'I've deleted the contact record for John Doe from Acme Corp. Please note that this action is permanent.'\n"
            "</DELETE RECORD EXAMPLE>\n\n"
            "Always double-check the data entered and confirm with the user before creating, updating, or deleting records. "
            "If any required information is missing, ask the user for clarification. When dealing with large datasets, "
            "consider using the 'force_save' option to save query results to a file in the workspace."
        )
        super().__init__(template=template, required=True, name="Salesforce CRM Operations", render_section_header=True, **data)